{"version":3,"sources":["auth-provider.ts","utlis/index.ts","utlis/use-async.ts","components/lib.tsx","store/auth.slice.ts","context/auth-context.tsx","utlis/http.ts","utlis/user.ts","components/id-select.tsx","components/user-select.tsx","Todolist/tsx/search-panel.tsx","components/pin.tsx","utlis/reorder.ts","utlis/use-optimimatic-options.ts","utlis/url.ts","Todolist/tsx/utli.ts","utlis/project.ts","Todolist/tsx/project-list.slice.tsx","Todolist/tsx/list.tsx","Todolist/tsx/index.tsx","assets/software-logo.svg","unauthenticated-app/Register.tsx","utlis/kanban.ts","screens/kanban/utli.tsx","utlis/task.ts","assets/task.svg","assets/bug.svg","screens/kanban/create-task.tsx","components/mark.tsx","components/drag-and-drop.tsx","screens/kanban/kanban-column.tsx","utlis/task-type.ts","components/task-type-select.tsx","screens/kanban/search-panel.tsx","screens/kanban/create-kanban.tsx","screens/kanban/task-modal.tsx","screens/kanban/index.tsx","screens/epic/utli.tsx","screens/epic/CreateEpic.tsx","utlis/epic.ts","screens/epic/index.tsx","screens/projects/index.tsx","Todolist/tsx/poject-modal.tsx","components/project-popover.tsx","components/user-popover.tsx","authenticated-app.tsx","unauthenticated-app/Login.tsx","assets/logo.svg","assets/left.svg","assets/right.svg","unauthenticated-app/index.tsx","components/error-boundary.tsx","entry.ts","App.tsx","reportWebVitals.ts","store/index.tsx","context/index.tsx","index.tsx"],"names":["apiUrl","process","localStorageKey","handleUserResponse","user","console","log","window","localStorage","setItem","token","login","data","fetch","method","headers","body","JSON","stringify","username","password","then","res","a","json","datas","ok","Promise","reject","register","logout","removeItem","RegExp","cleanObject","obj","result","Object","keys","forEach","key","i","value","undefined","isVoid","useDebounce","delay","useState","debouncedValue","setDebouncedValue","useEffect","timeout","setTimeout","clearTimeout","useDocumentTitle","title","keepOnUnmout","oldTitle","useRef","document","current","resetRoute","location","href","origin","useMountedRef","mountedRef","defaultInitialState","stat","error","defaultConfig","throwOnError","useAsync","initialState","initialConfig","config","useReducer","state","action","safeDispatch","dispatch","useCallback","useSafeDispatch","setData","setError","retry","setRetry","run","promise","runConfig","Error","catch","isIdle","isLoading","isError","isSuccess","Row","styled","div","props","between","marginBottom","gap","FullPage","FullPageLoading","size","FullPageErrorFallBack","ButtonNoPadding","Button","ErrorBox","message","Text","type","ScreenContainer","authSlice","createSlice","name","reducers","setUser","payload","actions","form","auth","selectUser","AuthContext","React","createContext","displayName","AuthPorvider","children","useQueryClient","cb","useDispatch","bootstrapUser","className","useAuth","context","useContext","useSelector","authStore","getItem","http","endpoint","configs","customConfig","Authorization","toUpperCase","qs","status","reload","useHttp","useUsers","param","client","useQuery","IdSelect","onChange","defaultOptionName","options","restProps","length","toNumber","Option","map","option","id","isNaN","Number","UserSelect","users","SearchPanel","setParam","Item","htmlFor","e","target","personId","Pin","checked","onCheckedChange","count","num","reorder","fromId","referenceId","list","copiedList","movingItemIndex","findIndex","item","insertAfter","targetIndex","insertBefore","from","to","toItem","removedItem","splice","toIndex","indexOf","useConfig","queryKey","callback","queryClient","onSuccess","invalidateQueries","onMutate","previousItems","getQueryData","setQueryData","old","onError","newItem","useDeleteConfig","filter","useAddConfig","useUrlQueryParam","useSearchParams","searchParams","useSetUrlSearchParam","get","setSearchParams","useMemo","reduce","prev","cui","arr","params","setSearchParam","o","fromEntries","useProjectsSearchParams","useProjectModal","editingProjectId","setEditingProjectId","useProject","editingProject","projectCreate","setProjectCreate","projectModalOpen","Boolean","open","close","startEdit","useProjectsQueryKey","useProjects","useEditProject","useMutation","useEditConfig","useAddProject1","asyncResult","mutate","enabled","projectListSlice","openProjectModal","closeProjectModal","projectListActions","List","rest","pagination","rowKey","columns","disabled","render","project","pin","dataIndex","sorter","b","localeCompare","find","created","dayjs","format","dataSource","More","deleteProject","useDeleteProject","overlay","onClick","Modal","confirm","content","okText","onOk","confirmDeleteProject","_defs","_g","ProjectListScreen","debouncedParam","dispath","projectButton","loading","_extends","assign","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgSoftwareLogo","_ref","svgRef","titleId","viewBox","xmlns","focusable","ref","x1","y1","x2","y2","stopColor","offset","stroke","strokeWidth","fillRule","d","fill","p","ForwardRef","useReorderKanban","useReorderConfig","useProjectIdInUrl","useLocation","pathname","match","useProjectInUrl","useKanBanSearchParams","projectId","useKanbanQueryKey","useTasksSearchParams","debounceName","typeId","processorId","tagId","useTasksQueryKey","useTasksModal","editingTaskId","setEditingTaskId","useTask","editingTask","useTasks","useReorderTask","kanbanId","toKanbanId","useReorderTaskConfig","CreateTask","setName","addTask","useAddTask","mutateAsync","inputMode","setInputMode","submit","toggle","mode","onBlur","placeholder","autoFocus","onPressEnter","evt","Mark","keyword","split","str","index","style","color","Drop","provided","isValidElement","cloneElement","droppableProps","innerRef","DropChild","forwardRef","Drag","draggableProps","dragHandleProps","kanban","useDeleteKanban","cancelText","TaskCard","task","cursor","TaskTypeIcon","taskTypes","useTaskTypes","taskType","src","taskIcon","bugIcon","KanbanColumn","tasks","epicId","note","Container","TasksContainer","direction","droppableId","minHeight","taskIndex","draggableId","TaskTypeSelect","width","CreateKanban","addKanban","useAddKanban","layout","labelCol","span","wrapperCol","TaskModal","useForm","useEditTask","editTask","editLoading","getFieldsValue","setFieldsValue","deleteTask","useDeleteTask","confirmLoading","visible","onCancel","resetFields","initialValues","label","rules","required","textAlign","KanbanScreen","currentPorject","kanbanIsLoading","taskIsLoading","kanbans","useDragEnd","screen","ColumnContainer","display","onDragEnd","useKanbans","reorderKanban","reorderTask","allTasks","destination","toId","fromKanbanId","fromTask","toTask","useEpicsQueryKey","CreateEpic","useAddEpic","addEpic","onFinish","values","onClose","forceRender","destroyOnClose","htmlType","EpicScreen","currentProject","epics","start","end","deleteEpic","useDeleteEpic","epicCreateOpen","setEpicCreateOpen","itemLayout","renderItem","epic","Meta","confirmDeleteEpic","description","ProjectScreen","routeType","units","useRouteType","Aside","selectedKeys","Main","path","element","replace","ProjectModal","useMutateProject","mutateLoading","ProjectPopover","projects","refetch","pinnedProjects","ContentContainer","placement","onVisibleChange","UserPopover","AuthenticatedApp","setProjectModalOpen","PageHeader","Header","HeaderLeft","HeaderRight","preventDefault","header","main","nav","aside","footer","Register","authData","cpassword","LongButton","test","Login","setCount","loginThunk","UnauthenticatedApp","isRegister","setIsRegister","ShadowCard","Title","Card","logo","left","right","h2","ErrorBoundary","fallbackRender","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","projectList","reducer","store","configureStore","AuthPorviders","QueryClient","defaultOptions","queries","refetchOnWindowFocus","QueryClientProvider","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b22f4d4a.chunk.js","sourcesContent":["import { User } from 'Todolist/tsx/search-panel';\n// 5-4 在真实环境中 如果使用 firebase 在这第三方的auth访问的话 本文件是不需要开发者开发 直接使用第三方的sdk即可 \n\nconst apiUrl = process.env.REACT_APP_API_URL\n\nconst localStorageKey = '__auth_provider_token__'\n\n// 5-8 补充\nexport const getToken = () => window.localStorage.getItem(localStorageKey)\n\nexport const handleUserResponse = ({user}: {user: User}) => {\n  console.log(' handleUserResponse ： ', user,   )// \n  window.localStorage.setItem(localStorageKey, user.token || '')\n  return user \n}\n\nexport const login = (data: {\n  username: string,\n  password: string,\n}) => {\n  console.log(' login ： ', data,   )// \n  return fetch(`${apiUrl}/login`, {\n    method: 'POST',  \n    headers: {\n      'Content-Type': 'application/json',  \n    },  \n    // body: JSON.stringify(data), \n    body: JSON.stringify({\n      username: '15160208606', \n      password: '1',\n    }), \n  }).then(async res => {\n    const datas = await res.json()\n    console.log(' projectproject res  ： ', res, datas )\n    if (res.ok) {\n      return handleUserResponse(datas)\n    } else {// 5-5\n      // return Promise.reject(data)// \n      return Promise.reject(datas)// \n    } \n  })\n}\n\nexport const register = (data: {\n  username: string,\n  password: string,\n}) => {\n  console.log(' register ： ', data,   )// \n  return fetch(`${apiUrl}/register`, {\n    method: 'POST',  \n    headers: {\n      'Content-Type': 'application/json',  \n    },  \n    body: JSON.stringify(data), \n  }).then(async res => {\n    console.log(' projectproject res  ： ', res,  )\n    if (res.ok) {\n      return handleUserResponse(await res.json())\n    } else {// 5-5\n      // return Promise.reject(data)// \n      return Promise.reject(await res.json())// \n    } \n  })\n}\n\nexport const logout = async () => window.localStorage.removeItem(localStorageKey)\n\n\n\n\n\n\n\n","import {\n  useEffect, useRef, useState\n} from \"react\"\n\n// 3-2\n// export const isFalsy = (value: any) => value === 0 ? false : !value\nexport const isFalsy = (value: unknown) => value === 0 ? false : !value\n// 4-3 unknown  是一个严格版的 any   unknown  可以起到 any的任何作用 但是使用上比 any 严格 \n// 如 isFalsy(参数任意)  但是使用时 限制就多了   any  就表示不对它做任何的类型检查 \n// js + .d.ts = .ts  拥有 ts 的类型保护 \n\n// 一般来说  声明函数 组件 hook时 都需要声明类型 \n\n\n// 6-8 object 类型 覆盖范围很广\nlet a: object\na = {name: 'zyb', }\na = () => {}\na = new RegExp('')\na = {...(() => {})}// 解构 无意义 得到的值是个空对象 \n\nlet b: {[key: string]: unknown}\nb = {name: 'zyb', }\n// b = () => {}// 不能将类型“() => void”分配给类型“{ [key: string]: unknown; }”。\n\nexport const isVoid = (value: unknown) => value === undefined || value === null || value === ''\n\n// export const cleanObject = (obj: object) => {\nexport const cleanObject = (obj: {[key: string]: unknown}) => {// 6-8 只需要键值对的 对象\n  console.log(' cleanObject   obj,   ： ', obj)\n  const result = {\n    ...obj,\n  }\n  Object.keys(result).forEach((key, i) => {\n    // x@ts-ignore\n    const value = result[key]\n    console.log('  对吗  !value ', !value, )\n    // if (!value) {\n    // if (isFalsy(value)) {\n    if (isVoid(value)) {// 6-8 小bug  false 等值也会被删除 \n      // x@ts-ignore\n      delete result[key]\n    }\n  })\n  return result\n}\n\n// 3-4 注意 如果没有以 use 开头会认为这是一个普通函数 报错  写的任何hook 都不能在普通函数中运行 \n\nexport const useMount = (cb: () => void) => {\n  console.log(' useMount   cb,   ： ', )\n  useEffect(() => {\n    cb()\n    // eslinjt-disable-next-line\n  }, [])\n  // }, [cb])// 6-8 如果不加入到依赖会警告 但是加入后会 无限循环  这个跟 useCallback 和 useMmeo 有关系\n}\n\n// const debounce = (func, delay) => {\n//   let timeout\n//   return (...params) => {\n//     console.log(' timeout ： ', timeout, delay, ) // \n//     if (timeout) {\n//       clearTimeout(timeout)\n//     }\n//     timeout = setTimeout(() => {\n//       console.log('  延时器 ： ', params)\n//       func(...params)\n//     }, delay)\n//   }\n// }\n\n// let log = debounce(() => console.log(' debounce ： ', ), 5000)\n\n// // 会发现只输出一次 debounce 文本\n// log()\n// log()\n// log({\n//   name: 'zyb',\n// }, 100)\n\n\n// 把 value  转化为 debouncedValue  在内部定义一个状态 \n// custom  hook 最大的特点是需要使用到其它的 hook \n// export const useDebounce = (value: any, delay?: number) => {\n\n\n// 4-4 加上泛型 及 给 返回使用倒的 参数 会发现函数的返回类型 自动变成了 相应类型 \n// 泛型 让我们写的 ts diam保持了很大的灵活性 \nexport const useDebounce = <V>(value: V, delay?: number) => {\n  const [ debouncedValue, setDebouncedValue ] = useState(value)\n  console.log(' useDebounce value, delay ： ', debouncedValue, value, delay,  )//\n  // console.log(' value.isExist ： ', value.isExist,  )// any 访问不会报错 unknown 会 \n\n  useEffect(() => {\n    // 每次value变化以后 设置一个定时器\n    const timeout = setTimeout(() => {\n      console.log('  延时器 ： ',  )\n      setDebouncedValue(value)\n    }, delay)\n    // 每次在上一个 useEffect 处理完以后再运行 \n    return () => clearTimeout(timeout)\n  }, [value, delay])\n  return debouncedValue \n}\n\n// 4-6 A[]  表示数组里 每一项A 的类型 \nexport const useArray = <T>(initialArray: T[]) => {\n  console.log(' useArray   initialArray,   ： ', initialArray  )\n  const [ value, setValue ] = useState(initialArray)\n  return {\n    value,\n    setValue,\n    add: (item: T) => setValue([...value, item]),\n    clear: () => setValue([]),\n    removeIndex: (index: number, ) => {\n      const copy = [\n        ...value,\n      ]\n      copy.splice(index, 1)\n      setValue(copy)\n    },\n    \n  } \n}\n\n// 8-1\nexport const useDocumentTitle = (title: string, keepOnUnmout: boolean = true ) => {\n  console.log(' useDocumentTitle   initialArray,   ： ', title, keepOnUnmout,   )\n  // const oldTitle = document.title// 下面的把 keepOnUnmout, oldTitle 加入到依赖里导致 oldTitle 永远是最新值\n  const oldTitle = useRef(document.title).current// 8-2 使用 useRef 保存值 而不是 闭包\n\n  useEffect(() => {\n    document.title = title\n  }, [title])\n  \n  useEffect(() => {\n    console.log(' 卸载 恢复   ,   ： ', title, oldTitle, keepOnUnmout,  )\n    return () => {\n      if (!keepOnUnmout) {\n        document.title = oldTitle\n      }\n    } \n  // }, [])\n  }, [keepOnUnmout, oldTitle])// 8-2 根据警告设置依赖\n}\n\n// 8-4 重置路由状态 并且可以刷新页面\nexport const resetRoute = () => window.location.href = window.location.origin\n  \n// 10-1 返回组件的挂载状态 如果还没挂载或者已经卸载 返回 false \nexport const useMountedRef = () => {\n  const mountedRef = useRef(false)\n\n  useEffect(() => {\n    mountedRef.current = true\n    return () => {\n      mountedRef.current = false\n    }\n  })\n\n  return mountedRef \n}\n\n\n","// 7-2\n\nimport { useCallback, useReducer, useState } from \"react\"\nimport { useMountedRef } from \"utlis\"\n\nexport interface State<D> {\n  error: Error | null \n  data: D | null \n  stat: 'idle' | 'loading' | 'error' | 'success'\n}\n\nconst defaultInitialState: State<null> = {\n  stat: 'idle',  \n  data: null,  \n  error: null,  \n}\n\n// 7-3\nconst defaultConfig = {\n  throwOnError: false,  \n}\n\n\nexport const useAsync1 = <D>(initialState?: State<D>, initialConfig?: typeof defaultConfig,  ) => {\n\n  // 10-1\n  const mountedRef = useMountedRef()\n\n  const config = {\n    ...defaultConfig,\n    ...initialConfig,\n  }\n  \n  const [ state, setState ] = useState<State<D>>({\n    ...defaultInitialState,\n    ...initialState,\n  })\n  console.log(' config, initialState, initialConfig ： ', config, initialState, initialConfig, state,  )// \n  \n  // const setData = (data: D) => setState({\n  //   data,\n  //   stat: 'success',  \n  //   error: null,  \n  // })\n  \n  // const setError = (error: Error) => setState({\n  //   data: null, \n  //   stat: 'success',  \n  //   error \n  // })\n\n  // 10-1 useCallback 优化 解决无限循环\n  const setData = useCallback((data: D) => setState({\n    data,\n    stat: 'success',  \n    error: null,  \n  }), [])\n  \n  const setError = useCallback((error: Error) => setState({\n    data: null, \n    stat: 'success',  \n    error \n  }), [])\n\n  // 9-4 \n  const [ retry, setRetry ] = useState(() => () => {})// 注意 如果给 useState 传入一个函数做参数 并希望使用它保存函数时  会导致无限循环 \n  // 含义 因为它把它直接运行了 react 会认为是要做惰性初始state  \n  // 用 useState 保存函数只能直接保存函数 或者可以使用 useRef 保存函数\n  // 如果使用变量定义函数  setRetry  然后在回调里重新赋值该变量 会导致函数每次都被重新定义 记不住状态\n\n  // 注意 使用 useRef 保存的值 并不是组件的状态 所以如果改变它的值 value   并不会引起组件的重新渲染 \n\n  \n  const run = useCallback(\n    (promise: Promise<D>,\n      // 9-5 \n      runConfig?: {retry: () => Promise<D>, }\n    ) => {\n      console.log('  对吗  !promise ', !promise,    )\n      if (!promise || !promise.then) {\n        throw new Error('请输入 Promise 类型数据')\n      }\n\n      // 9-4\n      setRetry(() => () => {\n        console.log(' setRetrysetRetry ： ',    );// \n        // 9-5 发现点击后虽然触发了 run 但是并没有重新发出请求 因为 并没有触发 callback \n        // run(promise);\n        if (runConfig?.retry) {// 如果有该函数属性 再调用它 解决报错问题 \n          run(runConfig?.retry(), runConfig);\n        }\n      })\n\n      // setState({\n      //   ...state,\n      //   stat: 'loading',  \n      // })\n      // 10-1 state 加入 依赖 useCallback 里面 再 setState 会导致死循环 解决 可以使用 setState 回调函数式写法 去除依赖引用 \n      setState((prevState) => ({...prevState, stat: 'loading',  }))\n\n      return promise.then(data => {\n        console.log(' useAsync data  ： ', data,  )\n\n        // 10-1 解决 如果在数据请求到达前 打断页面的渲染 会导致 告警 setState  一个卸载的组件  \n        if (mountedRef.current) {\n          setData(data)\n        }\n\n        return data \n      }) \n      .catch(error => {// 注意 如果在 这里 catch  之后 如果不主动抛出 外部调用的地方会无法捕获到异常 \n        console.log(' useAsync errorerror  ： ', error,  )\n        setError(error)\n        if (config.throwOnError) {\n          return Promise.reject(error)// 7-3 \n        }\n        return error \n      }) \n    },\n\n    [\n      config.throwOnError, mountedRef, setData, setError,\n      // state,// 会导致死循环\n    ],\n  )\n\n  return {\n    isIdle: state.stat === 'idle', \n    isLoading: state.stat === 'loading', \n    isError: state.stat === 'error', \n    isSuccess: state.stat === 'success', \n    run,\n    setData,\n    setError,\n    // 9-4 retry 被调用时 重新跑一次 run \n    retry,\n    ...state\n  } \n\n}\n\n\nconst useSafeDispatch = <T>(dispatch: (...args: T[]) => void) => {\n  console.log(' useSafeDispatch   dispatch: () => void,   ： ',   )\n  const mountedRef = useMountedRef()\n  return useCallback((...args: T[]) => (mountedRef.current ? dispatch(...args) : void 0), [\n    dispatch,\n    mountedRef,\n  ]) \n}\n\n\nexport const useAsync = <D>(initialState?: State<D>, initialConfig?: typeof defaultConfig,  ) => {\n\n  // 10-1\n  const mountedRef = useMountedRef()\n\n  const config = {\n    ...defaultConfig,\n    ...initialConfig,\n  }\n  \n  // const [ state, setState ] = useState<State<D>>({\n  //   ...defaultInitialState,\n  //   ...initialState,\n  // })\n\n  // 10-5\n  const [ state, dispatch ] = useReducer((state: State<D>, action: Partial<State<D>>) => ({...state, ...action}), {\n    ...defaultInitialState,\n    ...initialState,\n  })\n  const safeDispatch = useSafeDispatch(dispatch)\n  console.log(' config, initialState, initialConfig ： ', config, initialState, initialConfig, state,  )// \n  \n  // const setData = (data: D) => setState({\n  //   data,\n  //   stat: 'success',  \n  //   error: null,  \n  // })\n  \n  // const setError = (error: Error) => setState({\n  //   data: null, \n  //   stat: 'success',  \n  //   error \n  // })\n\n  // 10-1 useCallback 优化 解决无限循环\n  const setData = useCallback((data: D) => safeDispatch({\n    data,\n    stat: 'success',  \n    error: null,  \n  }), [safeDispatch])\n  \n  const setError = useCallback((error: Error) => safeDispatch({\n    data: null, \n    stat: 'success',  \n    error \n  }), [safeDispatch])\n\n  // 9-4 \n  const [ retry, setRetry ] = useState(() => () => {})// 注意 如果给 useState 传入一个函数做参数 并希望使用它保存函数时  会导致无限循环 \n  // 含义 因为它把它直接运行了 react 会认为是要做惰性初始state  \n  // 用 useState 保存函数只能直接保存函数 或者可以使用 useRef 保存函数\n  // 如果使用变量定义函数  setRetry  然后在回调里重新赋值该变量 会导致函数每次都被重新定义 记不住状态\n\n  // 注意 使用 useRef 保存的值 并不是组件的状态 所以如果改变它的值 value   并不会引起组件的重新渲染 \n\n  \n  const run = useCallback(\n    (promise: Promise<D>,\n      // 9-5 \n      runConfig?: {retry: () => Promise<D>, }\n    ) => {\n      console.log('  对吗  !promise ', !promise,    )\n      if (!promise || !promise.then) {\n        throw new Error('请输入 Promise 类型数据')\n      }\n\n      // 9-4\n      setRetry(() => () => {\n        console.log(' setRetrysetRetry ： ',    );// \n        // 9-5 发现点击后虽然触发了 run 但是并没有重新发出请求 因为 并没有触发 callback \n        // run(promise);\n        if (runConfig?.retry) {// 如果有该函数属性 再调用它 解决报错问题 \n          run(runConfig?.retry(), runConfig);\n        }\n      })\n\n      // setState({\n      //   ...state,\n      //   stat: 'loading',  \n      // })\n      // 10-1 state 加入 依赖 useCallback 里面 再 setState 会导致死循环 解决 可以使用 setState 回调函数式写法 去除依赖引用 \n      // setState((prevState) => ({...prevState, stat: 'loading',  }))\n      safeDispatch({ stat: 'loading',  })\n\n      return promise.then(data => {\n        console.log(' useAsync data  ： ', data,  )\n\n        // 10-1 解决 如果在数据请求到达前 打断页面的渲染 会导致 告警 setState  一个卸载的组件  \n        // if (mountedRef.current) {\n        //   setData(data)\n        // }\n        // 10-5\n        setData(data)\n\n        return data \n      }) \n      .catch(error => {// 注意 如果在 这里 catch  之后 如果不主动抛出 外部调用的地方会无法捕获到异常 \n        console.log(' useAsync errorerror  ： ', error,  )\n        setError(error)\n        if (config.throwOnError) {\n          return Promise.reject(error)// 7-3 \n        }\n        return error \n      }) \n    },\n\n    [\n      config.throwOnError,\n      // mountedRef, \n      setData, setError,\n      // state,// 会导致死循环\n\n      safeDispatch,// 10-5 \n    ],\n  )\n\n  return {\n    isIdle: state.stat === 'idle', \n    isLoading: state.stat === 'loading', \n    isError: state.stat === 'error', \n    isSuccess: state.stat === 'success', \n    run,\n    setData,\n    setError,\n    // 9-4 retry 被调用时 重新跑一次 run \n    retry,\n    ...state\n  } \n\n}\n\n\n","// 6-6\nimport styled from '@emotion/styled'// \nimport { Spin, Typography, Button } from 'antd';\n\nexport const Row = styled.div<{\n  gap?: number | boolean,\n  between?: boolean,\n  marginBottom?: number,\n}>`\n  display: flex;\n  align-items: center;\n  justify-content: ${props => props.between ? 'space-between' : undefined};\n  color:red;\n  margin-bottom: ${props => props.marginBottom + 'rem'};\n  > * {\n    margin-top: 0!important;\n    margin-bottom: 0!important;\n    margin-right: ${props => typeof props.gap === 'number' ? props.gap + 'rem' : props.gap ? '2rem' : undefined};\n  }\n`\n\n// 7-4\nconst FullPage = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\nexport const FullPageLoading = () => <FullPage>\n  <Spin size={'large'} />\n</FullPage>\n\n\n// 不能将类型“Error | null”分配给类型“Error”。  \n// 解决 给参数加上判断值 null \nexport const FullPageErrorFallBack = ({error}: {error: Error | null}) => <FullPage>\n  {/* <Typography.Text type={'danger'}  >\n    {error?.message}\n  </Typography.Text> */}\n\n  {/* 11-3 替换 */}\n  <ErrorBox error={error} ></ErrorBox>\n</FullPage>\n\n\n// 10-3\nexport const ButtonNoPadding = styled(Button)`\n  padding: 0;\n`\n\n// 11-3 使用鸭子类型\n// 如果要体现出 isError 的信息 成为真正的类型守卫  需要 给函数加上返回值类型  \n// const isError = (value: any) => value?.message// 类型守卫 \nconst isError = (value: any): value is Error => value?.message// 当符合条件时 它就是 Error 类型  \n// 如果返回 true  后续它就会被当做 Error  类型 \n\nexport const ErrorBox = ({error}: {error: unknown}) => {\n// export const ErrorBox = ({error}: { error?: { message: string }}) => {\n  // 对象的类型为 \"unknown\"。  解决 使用可选属性调用读取 \n  // if (error.message) {\n  // if (error?.message) {\n  if (isError(error)) {\n    return <Typography.Text type={'danger'}  >\n      {error.message}\n    </Typography.Text> \n  }\n  return null// \n}\n\n// 12-6\nexport const ScreenContainer = styled.div`\n  padding: 3.2rem;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`\n\n\n\n","// 10-12\nimport { createSlice,  } from '@reduxjs/toolkit'// \nimport { RootState } from 'store'\nimport * as auth from 'auth-provider'// \nimport { AuthForm } from 'context/auth-context';\nimport { AppDispatch } from './index';\nimport { bootstrapUser } from 'context/auth-context';\nimport { User } from 'Todolist/tsx/search-panel';\n\n\nexport interface State {\n  user: User | null\n}\n\nconst initialState: State = {\n  user: null,  \n}\n\nexport const authSlice = createSlice({\n  name: 'authSlice', \n  initialState,\n\n  reducers: {\n    setUser(state, action) {\n      console.log(' setUser ： ', state,  )\n      state.user = action.payload\n    },\n  },  \n})\n\nexport const {setUser} = authSlice.actions\n\nexport const login = (form: AuthForm) => (dispatch: AppDispatch) => auth.login(form).then(user => {\n  console.log(' login  user  ： ', user,  )\n  dispatch(setUser(user))\n})\n\nexport const register = (form: AuthForm) => (dispatch: AppDispatch) => auth.register(form).then(user => {\n  console.log(' register  user  ： ', user,  )\n  dispatch(setUser(user))\n})\n\nexport const logout = () => (dispatch: AppDispatch) => auth.logout().then(user => {\n  console.log(' logout  user  ： ',   )\n  dispatch(setUser(null))\n})\n\nexport const bootstrap = () => (dispatch: AppDispatch) => bootstrapUser().then(user => {\n  console.log(' bootstrap  user  ： ',   )\n  dispatch(setUser(user))\n})\n\nexport const selectUser = (state: RootState) => {\n  console.log(' selectUser ： ', state   )// \n  return state.auth.user \n}\n","// 5-5\n\nimport React, { useCallback, useState } from 'react';\nimport * as auth from 'auth-provider'// \nimport { User } from 'Todolist/tsx/search-panel';\nimport { http } from 'utlis/http';\nimport { useMount } from 'utlis';\nimport { useAsync } from 'utlis/use-async';\nimport { FullPageLoading, FullPageErrorFallBack, } from 'components/lib';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register } from 'auth-provider';\nimport * as authStore from 'store/auth.slice'// \nimport { QueryClient, useQueryClient } from 'react-query';\n\n\nexport interface AuthForm {\n  username: string,\n  password: string\n}\n\nconst AuthContext = React.createContext<| {\n  user: User | null;\n  register: (form: AuthForm) => Promise<void>;\n  login: (form: AuthForm) => Promise<void>; \n  logout: () => Promise<void>;\n} | undefined>(undefined)\n\nAuthContext.displayName = 'AuthContext'\n\n\n// 10-12 查看类型发现 ReactNode 可以是  null | undefined;  类型\nexport const AuthPorvider = ({children}: {children: React.ReactNode}) => {\n  // const [ user, setUser ] = useState<User | null>(null)\n\n  // 12-1\n  const queryClient = useQueryClient()\n\n\n\n  const {run, isIdle, isError, isLoading, error, data: user, setData: setUser, } = useAsync<User | null>(undefined, {throwOnError: true,  })// 7-4\n  console.log(' isError, isIdle, isLoading, user ： ', isError, isIdle, isLoading, user,  )// \n  const login = (form: AuthForm) => auth.login(form).then(setUser)\n  const register = (form: AuthForm) => auth.register(form).then(setUser)\n  const logout = () => auth.logout().then(() => {\n    setUser(null)\n    // 12-1\n    // queryClient.clear()// 去除queryClient全部的数据\n  })\n  // 10-12 替换为使用 useDispatch 派发  \n  const dispatch: (...args: unknown[]) => Promise<User> = useDispatch()\n\n\n\n  // 5-8\n  useMount(() => {\n    console.log('  useMount     ：',     )\n    // bootstrapUser().then(setUser)\n    // 7-4\n    // run(bootstrapUser())\n    // 10-12\n    run(dispatch(authStore.bootstrap()))\n  })\n\n  // 7-4\n  console.log('  对吗  isIdle || isLoading ', isIdle || isLoading,    )\n  if (isIdle || isLoading) {\n    return <FullPageLoading /> \n  }\n  if (isError) {\n    return <FullPageErrorFallBack error={error} /> \n  }\n\n  // 10-12 直接返回 children 但是 这样 context/index 代码会报错 不是 react 元素 可能是 null 或则 undefined   \n  // 但是 作为组件的话 是不能 返回   null 或则 undefined   解决 给 children 包裹元层 标签\n  // 其返回类型 \"ReactNode\" 不是有效的 JSX 元素。\n  return <div className={``}>\n    {children}\n  </div> \n  // return children \n\n  // return <AuthContext.Provider children={children} value={{ user, login, register, logout, }} ></AuthContext.Provider> \n  \n  // const login = (form: AuthForm) => {\n  //   console.log(' login   form: AuthForm,   ： ', form,  )\n  //   return auth.login(form).then(user => {\n  //     console.log('  user.data  ： ', user,  )\n  //     setUser(user)\n  //   })\n  // }\n\n}\n\nexport const useAuth = () => {\n  const context = React.useContext(AuthContext)\n  console.log('  对吗  !context ', !context, context,   )\n  // if (!context) {\n  //   throw new Error('useAuth 必须在 AuthPorvider 里使用 ')\n  // }\n  // return context \n\n  // 10-12 替换代码 在代码的上游修改 传递的名称 \n  const dispatch: (...args: unknown[]) => Promise<User> = useDispatch()\n  const user = useSelector(authStore.selectUser)\n  const login = useCallback((form: AuthForm) => dispatch(authStore.login(form)), [dispatch])\n  const register = useCallback((form: AuthForm) => dispatch(authStore.register(form)), [dispatch])\n  const logout = useCallback(() => dispatch(authStore.logout()), [dispatch])\n\n  // 返回的是一个额promise \n  // login({\n  //   username: '111', \n  //   password: '111',  \n  // }).then(res => {\n  //   console.log(' dispatch  login res  ： ', res,  )\n    \n  // })\n\n  return {\n    user,\n    login,\n    register,\n    logout,\n  } \n}\n\n// 5-8\nexport const bootstrapUser = async() => {\n  let user = null\n  const token = auth.getToken()\n  console.log(' bootstrapUser token ： ', token,  )// \n  if (token) {\n    const data = await http('me', {token})\n    // const data = await http('projects', {token})\n    console.log(' bootstrapUser token ： ', token, data, )// \n    user = data.user\n    // user = {\n    //   name: 'zybs', \n    //   age: 88, \n    //   token: '666',  \n    //   id: 'string',\n    //   email: 'string',\n    //   title: 'string',\n    //   organization: 'string',\n    // }\n  }\n  return user \n}\n\n\n\n\n\n","// 5-7 \n\nimport { config } from 'process'\nimport qs from 'qs'// \nimport * as auth from 'auth-provider';\nimport { useAuth } from 'context/auth-context';\nimport { useCallback } from 'react';\n\nconst apiUrl = process.env.REACT_APP_API_URL\n\nexport interface Config extends RequestInit {\n  token?: string\n  data?: object\n}\n\n// axios 和fetch的表现不一样，axios可以直接在返回状态不为2xx的时候抛出异常\n\n\n// 注意 如果调用时只传入第一个参数 如果函数里对第二个对象参数进行了解构 参数类型不能是 可选类型 会导致报错 可以使用 默认值解决\n// 类型“Config | undefined”上不存在属性“headers”。\n// export const http = async (endpoint: string, configs?: Config ) => {\nexport const http = async (endpoint: string, configs: Config = {}) => {\n  console.log(' endpoint: string   ： ', endpoint, configs,  )\n  const {\n    data,\n    token,\n    headers,\n    ...customConfig\n  } = configs\n\n  const config = {\n    method: 'GET',  \n    headers: {\n      Authorization: token ? `Bearer ${token}` : '',\n      'Content-Type': data ? `application/json` : '',\n    },  \n    ...customConfig\n  }\n\n  if (config.method.toUpperCase() === 'GET') {\n    endpoint += `?${qs.stringify(data)}`\n  } else {\n    config.body = JSON.stringify(data || {})\n  } \n  \n  return window.fetch(`${apiUrl}/${endpoint}`, config).then(async res => {\n    console.log(' projectproject res  ： ', res,  )\n    if (res.status === 401) {\n      await auth.logout()// \n      window.location.reload()\n      return Promise.reject({\n        message: '请重新登录',  \n      }) \n    }\n    const data = await res.json()   \n    console.log('  await findOne 结果  ： ', data,  )\n    if (res.ok) {\n      return data\n    } else {\n      // 捕获服务端异常 手动抛出异常\n      return Promise.reject(data)// \n    } \n  })\n}\n\n\n// 5-8\nexport const useHttp = () => {\n  const {user,  } = useAuth()\n  // Parameters  操作符\n  // 10-1\n  return useCallback((...[endpoint, config]: Parameters<typeof http>) => http(endpoint, {\n    ...config,\n    token: user?.token,  \n  }), [\n    user?.token,\n  ])// \n  return (...[endpoint, config]: Parameters<typeof http>) => http(endpoint, {\n    ...config,\n    token: user?.token,  \n  })// \n}\n\n\n// 5-9 联合类型   \nlet strNum: string | number\nstrNum = 'zyb'\nstrNum = 88\n\n// 不能将类型“{}”分配给类型“string | number”。\n// strNum = {}\n\n\n// 类型别名 和 接口 很多场景可以互换 \n// 区别 1 type 可以定义 联合/交叉类型 但是 接口不行 \n// 2 接口也无法实现 工具类型 \n\n// ts 和 js 的 typeof  不同\n// js 里的是运行时  ts 库的是 静态运行的 操作类型的 并不会参与运行时 \n\n// 工具类型 用法： 用泛型给它传入一个其它类型 然后 工具类型 对这个类型进行某种操作 \n\n\nexport interface ObjIf {\n  name: string,\n}\n\nexport type IfType = {\n  name: string,\n}\n\nconst typeObj: ObjIf = {\n  name: 'zyb', \n}\n\nconst typeObj2: IfType = {\n  name: 'zyb', \n}\n\n// 当不想改动原 如 第三方库的接口类型  为了代码简洁性 最佳实践 不侵入原类型 可以使用 Partial \n// 得到一个新的类型 \ntype PartialType = {\n  name: string\n  age: number \n}\n\nconst abc: Partial<PartialType> = {\n  age: 666, \n}\n\n// const bbb: Omit<PartialType, 'name'> = {\nconst bbb: Omit<PartialType, 'name' | 'age'> = {\n  name: 'zyb', \n  // age: 666, \n}// 删除不需要的属性 值需要部分属性\n\n\n\n// 5-10 探究实现方法   查看源码 发现是 取出对象键 然后变成可选键\n// keyof 把 一个对象的  key 取出来 联合在一起形成一个新的类型 \ntype PartialCopy<T> = {\n  [P in keyof T]?: T[P]\n}\n\n// “Keyof”仅表示类型，但在此处却作为值使用。\ntype Keyof = keyof PartialType\n\n// Omit 是由 Pick Exclude 组成\n\n\n// Pick  Omit 操作的是键值对 \n\n\n// K extends keyof T   取出的键 必须是  K extends keyof T   泛型参数的键集合之一\n// type pickType = Pick<PartialType, 'name'> \n// type pickType = Pick<PartialType, 'name' | 'age'> \n\n// 类型“\"name\" | \"age1\"”不满足约束“keyof PartialType”。\n// type pickType = Pick<PartialType, 'name' | 'age1'> \n\n\n// Exclude 操作的是联合类型    源码 判断键是不是 extends 三元表达式 是 就返回 never 表示什么都没有 \ntype TypeKeys = keyof PartialType\n// type excludeType = Exclude<TypeKeys, 'name'> \ntype excludeType = Exclude<TypeKeys, 'name' | 'age'> \n\n\n// ts 就是一个约束系统 可以把 系统约束的越紧 越好 出错概率越低 所以要学好ts 里的操作符 和 类型 \n\n\n","import { useQuery } from 'react-query';\n// 7-2\nimport { useEffect } from 'react';\nimport { useAsync } from 'utlis/use-async';\nimport { cleanObject } from 'utlis';\nimport { useHttp } from 'utlis/http';\nimport { User } from 'Todolist/tsx/search-panel';\n\n// export const useUsers = (param?: Partial<User>) => {\n//   const client = useHttp()\n//   const {run, ...result  } = useAsync<User[]>()\n\n//   useEffect(() => {\n//     console.log(' User 副作用 ： ', param   )// \n//     run(client('users', {\n//       data: cleanObject(param || {}),\n//     }))\n//   }, [param])\n\n//   return result \n// }\n\n// 12-17\nexport const useUsers = (param?: Partial<User>) => {\n  const client = useHttp()\n  console.log(' useUsers ： ', param,  )// \n  return useQuery<User[]>(\n    [\n      'users', param\n    ], \n    () => client(`users`, {data: param}),\n  )\n\n}\n\n","\n// 9-1\nimport { Raw } from '../types/index';\nimport { Select } from 'antd';\nimport React from 'react';\n// import { SelectProps } from 'antd/es/select';\n\n// type SelectProps = React.ComponentProps<Select>\ntype SelectProps = React.ComponentProps<typeof Select>// Select 只是组件 需要 typeof 组件  身上的所有类型\n\n// export interface IdSelectProps extends SelectProps {\nexport interface IdSelectProps extends Omit<SelectProps, 'value' | 'onChange' | 'options'> {\n  // value: Raw | null | undefined, \n  // onChange: (value?: number,) => void,\n\n  // 11-5\n  value?: Raw | null | undefined, \n  onChange?: (value?: number,) => void,\n\n  defaultOptionName?: string,\n  options?: {// 作者报错 因为 extends SelectProps 它里面自带有 options 属性 不是简单的覆盖 而是尝试最大公约数 解决 使用 Omit\n    name: string,\n    id: number,  \n  }[]\n}\n// } & SelectProps// 透传属性\n// } & SelectProps// 但是不好 如果没有暴露出来 还得查找  或者没有暴露这样的  可以使用 react 提供的扒取类型方法 工具方法\n\n\n// 发现下拉框组件一开始加载的时候会显示对应的数字初始值 但是一会后显示对应的文本 \n// 原因 是列表数据还没有加载过来 所以数据没有匹配到任意一项 select的默认行为就是把id显示进去 \n// 解决 value 加判断 \nexport const IdSelect = (props: IdSelectProps) => {\n  const {value, onChange, defaultOptionName, options, ...restProps } = props// \n  console.log(' IdSelect ： ', props,   )// \n  return <Select\n    // value={toNumber(value)}\n    value={options?.length ? toNumber(value) : 0}\n    // onChange={(value) => onChange(toNumber(value) || undefined)}\n    // 11-5\n    onChange={(value) => onChange?.(toNumber(value) || undefined)}\n    {...restProps}\n  >\n    {\n      defaultOptionName ? <Select.Option value={0} >{defaultOptionName}</Select.Option> : null\n    }\n    {options?.map((option, i) => <Select.Option key={option.id} value={option.id} >{option.name}</Select.Option>)}\n  </Select> \n}\n\nconst toNumber = (value: unknown) => {\n  console.log(' toNumber   value: unknown,   ： ', value,  )\n  return isNaN(Number(value)) ? 0 : Number(value)\n}\n\n","\n// 9-2\nimport { Raw } from '../types/index';\nimport { Select } from 'antd';\nimport React from 'react';\nimport { useUsers } from 'utlis/user';\nimport { IdSelect } from 'components/id-select';\n\nexport const UserSelect = (props: React.ComponentProps<typeof IdSelect>) => {\n  console.log(' UserSelect ： ', props,  )// \n  const {data: users} = useUsers()\n  return <IdSelect options={users || []} {...props} ></IdSelect> \n}\n\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React, { useState, useEffect } from 'react';\nimport { Form, Select, Input,  } from 'antd'// \nimport { Project } from 'Todolist/tsx/list';\nimport { UserSelect } from 'components/user-select';\n\n// 4-2\nexport interface User {\n  // id: string\n  id: number// 9-2\n  name: string\n  email: string\n  title: string\n  organization: string\n  token: string\n}\n\n// 4-1 \nexport interface SearchPanelProps {\n  users: User[],\n  // param: {\n  //   name: string\n  //   personId: string\n  // },\n  // param: Pick<Project, 'name' | 'personId'>// 9-2 保持类型一致 \n  param: Partial<Pick<Project, 'name' | 'personId'>>// 9-2 解决 同目录的 index调用处  param={param}  报错 不能将类型“undefined”分配给类型“string”。 \n  setParam: (param: SearchPanelProps['param']) => void,\n}\n\n\n// 3-1\n\nconst SearchPanel = (props: SearchPanelProps) => {\n  console.log(' SearchPanel   props    ： ', props  )\n  const { param, setParam, users, } = props// \n    \n  return <Form\n    // css={{\n    //   'margin-top': '20px'\n    // }}\n  >\n    <div>\n      <Form.Item htmlFor=\"username\">\n        <Input type=\"text\"  \n          value={param.name}  \n          onChange={(e) => setParam({\n            ...param,\n            // 点击查看类型 发现是 value: string;   在 lib.dom.ts \n            name: e.target.value,  \n          })}\n        />\n      </Form.Item>\n\n      <Form.Item htmlFor=\"username2\">\n\n        <UserSelect\n          defaultOptionName={'负责人'}\n          value={param.personId}  \n          onChange={(value) => setParam({\n            ...param,\n            personId: value,  \n          })}\n        >\n        </UserSelect>\n        \n        {/* <Select\n          value={param.personId}  \n          // onChange={(e) => setParam({\n          //   ...param,\n          //   personId: e.target.value,  \n          // })}\n          onChange={(value) => setParam({\n            ...param,\n            personId: value,  \n          })}\n        >\n          <Select.Option value={''} >负责人</Select.Option>\n          {users.map((user, i) => <Select.Option value={user.id} key={user.id} >user {user.name}</Select.Option>)}\n        </Select> */}\n      </Form.Item>\n    </div>\n  </Form> \n}\n\nexport default SearchPanel;\n","// 9-4\nimport { Rate, Spin, Typography } from 'antd';\n\nexport interface PinProps extends React.ComponentProps<typeof Rate> {\n  checked: boolean\n  onCheckedChange?: (checked: boolean) => void,\n  \n}\n\nexport const Pin = (props: PinProps) => {\n  const {checked, onCheckedChange, ...restProps  } = props// \n  return <Rate\n    count={1}\n    value={checked ? 1 : 0}\n    // onChange={(num) => onCheckedChange(!!num)}\n    // 不能调用可能是“未定义”的对象。   解决 加上可选调用属性\n    onChange={(num) => onCheckedChange?.(!!num)}\n    // onChange={(num) => onCheckedChange?.(Boolean(num))}// 相当于它 \n    {...restProps} \n  /> \n}\n\n\n","// 12-13\n\n\n/**\n * 在本地对排序进行乐观更新\n * @param fromId 要排序的项目的id\n * @param type 'before' | 'after'\n * @param referenceId 参照id\n * @param list 要排序的列表, 比如tasks, kanbans\n */\nexport const reorder = ({\n  fromId,\n  type,\n  referenceId,\n  list,\n}: {\n  list: { id: number }[];\n  fromId: number;\n  type: \"after\" | \"before\";\n  referenceId: number;\n}) => {\n  const copiedList = [...list];\n  // 找到fromId对应项目的下标\n  const movingItemIndex = copiedList.findIndex((item) => item.id === fromId);\n  if (!referenceId) {\n    return insertAfter([...copiedList], movingItemIndex, copiedList.length - 1);\n  }\n  const targetIndex = copiedList.findIndex((item) => item.id === referenceId);\n  const insert = type === \"after\" ? insertAfter : insertBefore;\n  return insert([...copiedList], movingItemIndex, targetIndex);\n};\n\n/**\n * 在list中，把from放在to的前边\n * @param list\n * @param from\n * @param to\n */\nconst insertBefore = (list: unknown[], from: number, to: number) => {\n  const toItem = list[to];\n  const removedItem = list.splice(from, 1)[0];\n  const toIndex = list.indexOf(toItem);\n  list.splice(toIndex, 0, removedItem);\n  return list;\n};\n\n/**\n * 在list中，把from放在to的后面\n * @param list\n * @param from\n * @param to\n */\nconst insertAfter = (list: unknown[], from: number, to: number) => {\n  const toItem = list[to];\n  const removedItem = list.splice(from, 1)[0];\n  const toIndex = list.indexOf(toItem);\n  list.splice(toIndex + 1, 0, removedItem);\n  return list;\n};\n","import { Task } from 'types/task';\nimport { reorder } from './reorder';\n// 11-7\nimport { Project } from 'Todolist/tsx/list';\nimport { useCallback, useEffect } from 'react';\nimport { useAsync } from 'utlis/use-async';\nimport { cleanObject } from 'utlis';\nimport { useHttp } from 'utlis/http';\nimport { QueryClient, QueryKey, useMutation, useQuery, useQueryClient } from 'react-query';\nimport { useProjectsSearchParams } from 'Todolist/tsx/utli';\n\n\n// 乐观更新方法 \nconst useConfig = (queryKey: QueryKey, callback: (target: any, old?: any[]) => any[]) => {\n  console.log(' useConfig   ,   ：', queryKey   )// \n  const queryClient = useQueryClient()\n\n  return {\n    onSuccess: () => queryClient.invalidateQueries(queryKey),\n    async onMutate(target: any,  ) {\n      console.log(' target   ： ', target,  )\n      const previousItems = queryClient.getQueryData(queryKey)\n      console.log(' previousItems ： ', previousItems,  )// \n      queryClient.setQueryData(queryKey, (old?: any[]) => {\n        return callback(target, old) \n      })\n      return {previousItems} \n    },\n    onError(error: any, newItem: any, context: any, ) {\n      console.log(' onError ： ', error, newItem, context, queryKey,  )\n      queryClient.setQueryData(queryKey, (context as {previousItems: Project[]}).previousItems)\n    },\n  }\n}\n\nexport const useDeleteConfig = (queryKey: QueryKey) => useConfig(queryKey, (target, old: any[] | undefined) => old?.filter((item) => item.id !== target.id) || [])\nexport const useEditConfig = (queryKey: QueryKey) => useConfig(queryKey, (target, old: any[] | undefined) => old?.map((item) => item.id === target.id ? {...item, ...target} : item) || [])\nexport const useAddConfig = (queryKey: QueryKey) => useConfig(queryKey, (target, old: any[] | undefined) => old ? [...old, target] : [])\n\n// 12-12\nexport const useReorderConfig = (queryKey: QueryKey) => useConfig(queryKey, (target, old: any[] | undefined) => old || [])\n\n// 12-13\nexport const useReorderKanbanConfig = (queryKey: QueryKey) => useConfig(queryKey, (target, old: any[] | undefined) => reorder({list: old, ...target}))\nexport const useReorderTaskConfig = (queryKey: QueryKey) => useConfig(queryKey, (target, old: any[] | undefined) => {\n  // 乐观更新 task 序列中的位置\n  const orderedList = reorder({list: old, ...target}) as Task[]\n  return orderedList.map((item: Task) => item.id === target.fromId ? {\n    ...item,\n    kanbanId: target.toKanbanId\n  } : item) \n})\n\n\n","// 8-5\n\nimport { useMemo } from \"react\"\nimport { useSearchParams, URLSearchParamsInit } from \"react-router-dom\"\nimport { cleanObject } from \"utlis\"\n\n// 查看函数类型 const useUrlQueryParam: (keys: string[]) => {}[]\n// \n// export const useUrlQueryParam = (keys: string[],  ) => {\n//   const [searchParams, setSearchParam] = useSearchParams()\n//   console.log(' searchParams ： ', searchParams, searchParams.get('name'), )// \n//   return [\n//     keys.reduce((prev, key, cui, arr ) => {\n//       console.log(' searchParams keys reduce prev, key, cui, arr ： ', prev, key, cui, arr )\n//       return {\n//         ...prev,\n//         // [key]: searchParams.get(key), \n//         [key]: searchParams.get(key) || '', \n//       } \n//     // }, {}),// 发现第一个类型是 {},   空对象 原因： reduce 传入的参数是 {}   查看ts发现reduce的签名返回的泛型是根据传入参数定义的 \n\n//     // 但是如下 指定后发现报错 不能将类型“string”分配给类型“{ [key: string]: string; }”。 \n//     // 原因  searchParams.get(key), 获取返回的值可能是 string | null;\n//     // 解决 给该变量加上 || 兼容\n//     }, {} as {[key: string]: string}),\n//     setSearchParam,\n//   ] as const \n// }\n\n// ts 里 数组应该是 相同类型的 但是 如下 类型不一致 如何让他们有同样的类型 就是让他们都有一个 字符串 数字 对象 \n// 加上 as const  返回最原始的对象\n\n// const tupleArr: (string | number | {\n//   gender: string;\n// })[]\n\n// const tupleArr: readonly [\"zyb\", 88, {\n//   readonly gender: \"male\";\n// }]\nconst tupleArr = ['zyb', 88, {gender: 'male'}] as const \n\n\n// 8-7 对象 数组 Map  都是实现了 iterator   特点 可以使用 for of 遍历 \n// const arrs = [1, 2]\n// for (var item of arrs) {console.log(item)}\n// const iteratoRes = arrs[Symbol.iterator]()\n// iteratoRes  运行iteratoRes即可输出 该类型的 iterator 函数实现 \n// iteratoRes.next() // 输出 {value: 1, done: false}\n\n// 在一个普通对象上部署 iterator  \n// 在控制台输入 \n// const searchItr = new URLSearchParams({name: 'zyb'})\n// searchItr[Symbol.iterator]  发现实现了 iterator \n\n\n// 8-6 总结  基本类型 组件状态 可以放到 于来丽 其它的决不可以\n// export const useUrlQueryParam = <K>(keys: K[],  ) => {// 8-6\nexport const useUrlQueryParam = <K extends string>(keys: K[],  ) => {// 8-6\n  const [searchParams, \n    // setSearchParam\n  ] = useSearchParams()\n  const setSearchParam = useSetUrlSearchParam()// 11-8\n\n  console.log(' searchParamssearchParamssearchParams ： ', keys, searchParams, searchParams.get('name'), )// \n\n  const setSearchParams = useSetUrlSearchParam()\n\n  return [\n    useMemo(() => keys.reduce((prev, key, cui, arr ) => {\n      console.log(' searchParamssearchParamssearchParams searchParams keys reduce prev, key, cui, arr ： ', prev, key, '111', searchParams.get(key), '222' )\n      return {\n        ...prev,\n        // 但是如果指定了参数类型 这里会报错字段类型不一致  计算属性名的类型必须为 \"string\"、\"number\"、\"symbol\" 或 \"any\"。\n        // 解决 类型不对会导致报错 因为如果 key 是 undefined  void  对象等类型不能当key\n        // 解决 对函数的参数泛型限定  K extends string  并且 修改返回的第一个类型\n        // [key]: searchParams.get(key) || '', \n        [key]: searchParams.get(key) ?? undefined, // 11-5 自己修改 不然请求会带上name参数\n      } \n    // }, {}),// 发现第一个类型是 {},   空对象 原因： reduce 传入的参数是 {}   查看ts发现reduce的签名返回的泛型是根据传入参数定义的 \n\n    // 但是如下 指定后发现报错 不能将类型“string”分配给类型“{ [key: string]: string; }”。 \n    // 原因  searchParams.get(key), 获取返回的值可能是 string | null;\n    // 解决 给该变量加上 || 兼容\n    // }, {} as {[key: string]: string}),\n    }, {} as { [key in K]: string} ), [\n      // setSearchParam,\n      searchParams,\n      // 注意 不要把 keys 放到依赖里 因为我们传入的keys是个对象数组 不是 state数据 会导致无限循环 如果由 useState 控制 还有一个好处 可以手动控制依赖项值并跟着改变\n    ]),// 8-6 每次都会创建新对象 1.性能不好 2.很危险\n    // 解决 使用 useMemo 把创建函数和依赖项数组作为参数传入 memo \n    // setSearchParam,\n\n    // 8-7\n    // (params: Partial<{[key: string]: unknown}>) => {\n    (params: Partial<{[key in K]: unknown}>) => {\n\n      // 11-8\n      return setSearchParams(params) \n\n      // const o = cleanObject({\n      //   ...Object.fromEntries(searchParams),// 读取 url 参数变成普通对象 再用新传入的对象覆盖 并去除无用的参数 \n      //   ...params\n      // // }) \n      // }) as URLSearchParamsInit// 转化类型 解决 下面调用 setSearchParam 赋值报错 \n      // console.log(' searchParams setSearchParam ： ', o  )// \n      // // 类型“{ [x: string]: unknown; }”的参数不能赋给类型“URLSearchParamsInit”的参数\n      // return setSearchParam(o) \n    }\n  ] as const \n}\n\n\n// 11-8 在一个地方处理 只有一个入口\nexport const useSetUrlSearchParam = () => {\n  const [searchParams, setSearchParam] = useSearchParams()\n  return (\n    params: {\n      [key in string]: unknown\n    }\n  ) => {\n    const o = cleanObject({\n      ...Object.fromEntries(searchParams),// 读取 url 参数变成普通对象 再用新传入的对象覆盖 并去除无用的参数 \n      ...params\n    // }) \n    }) as URLSearchParamsInit// 转化类型 解决 下面调用 setSearchParam 赋值报错 \n    console.log(' useSetUrlSearchParam searchParams setSearchParam ： ', o  )// \n    // 类型“{ [x: string]: unknown; }”的参数不能赋给类型“URLSearchParamsInit”的参数\n    return setSearchParam(o) \n  }\n  \n}\n","import { useSetUrlSearchParam } from './../../utlis/url';\nimport { useMemo } from \"react\"\nimport { useUrlQueryParam } from \"utlis/url\"\nimport { useProject } from 'utlis/project';\nimport { useQueryClient } from \"react-query\";\n\n// 9-2\nexport const useProjectsSearchParams = () => {\n  const [\n    param, \n    setParam,\n  ] = useUrlQueryParam(['name', 'personId' ])\n  console.log(' searchParams param,   ：', param,    )// \n   \n// 9-2 但是替换后发现页面无限循环  解决 使用 useMemo \n  const projectsParam = useMemo(() => ({\n    ...param,\n    personId: Number(param.personId) || undefined \n  }), [param])\n  \n  return [\n    projectsParam,\n    setParam,\n  ] as const// 结构数组处 得到变量的类型才会与返回值类型一致 \n}\n\n// 11-1 扮演的是全局状态管理器的作用 \nexport const useProjectModal = () => {\n  // 11-4\n  const [\n    {editingProjectId},\n    setEditingProjectId,\n  ] = useUrlQueryParam([\n    'editingProjectId'\n  ])\n  const {\n    data: editingProject,\n    isLoading,\n  } = useProject(Number(editingProjectId))// )\n  console.log(' editingProjectId ： ', editingProjectId,  )// \n  const startEdit = (id: number) => {\n    console.log(' startEdit   ,   ： ', id,  )\n    setEditingProjectId({\n      editingProjectId: id,\n    })\n  }\n\n\n  \n  const [\n    {\n      projectCreate,\n    },\n    setProjectCreate,\n  ] = useUrlQueryParam([\n    'projectCreate'\n  ])\n\n  const open = () => {\n    console.log(' open   ,   ： ',   )\n    setProjectCreate({\n      projectCreate: true,  \n    })\n  }\n  const close = () => {\n    console.log(' close   ,   ： ',   )\n    setProjectCreate({\n      // projectCreate: false,  \n      projectCreate: undefined,  // 不设置为 解决 url路径带上 false\n    })\n    // 11-4\n    setEditingProjectId({\n      editingProjectId: undefined,    \n    })\n  }\n  console.log(' useUrlQueryParam projectCreate,   ：', projectCreate,    )// \n  \n  const setUrlParam = useSetUrlSearchParam()// 11-8\n\n\n\n  return {\n    // projectModalOpen: projectCreate === 'true',\n    // projectModalOpen: projectCreate === 'true' || Boolean(editingProject),// 11-4\n    projectModalOpen: projectCreate === 'true' || Boolean(editingProjectId),// 11-6\n    open,\n    close,\n    startEdit,\n    isLoading,\n\n    editingProject,\n  } as const\n  // 好处 之后其它地方 使用 hook  解构时 就可以得到类型提示 \n  // 可以不用季节 先后顺序 直接  如果使用对象解构比较麻烦 必须使用别名 解构 \n  // 一般返回3个以上使用对象 比较方便 \n  // return [\n  //   projectCreate === 'true',\n  //   open,\n  //   close,\n  // ]\n}\n\n// 11-6\nexport const useProjectsQueryKey = () => {\n  const [params] = useProjectsSearchParams()\n  return ['projects', params] \n}\n\n\n","import { useEditConfig, useAddConfig, useDeleteConfig } from './use-optimimatic-options';\nimport { Project } from 'Todolist/tsx/list';\n// 7-2\nimport { useCallback, useEffect } from 'react';\nimport { useAsync } from 'utlis/use-async';\nimport { cleanObject } from 'utlis';\nimport { useHttp } from 'utlis/http';\nimport { QueryClient, useMutation, useQuery, useQueryClient, QueryKey } from 'react-query';\nimport { useProjectsSearchParams } from 'Todolist/tsx/utli';\n\n// 9-5 普通情况下 状态提升可以达到 共享数据 代码简易的平衡 \n// 但是状况变复杂 要在另一个很远的地方刷新状态就复杂了 这个时候就需要使用 全局状态管理\nexport const useProjects1 = (param?: Partial<Project>) => {\n  const client = useHttp()\n  const {run, ...result  } = useAsync<Project[]>()\n\n  // 9-5 提取出来\n  // 10-1 使用 useCallback 优化 \n  const fetchProjects = useCallback(() => client('projects/', {\n    data: cleanObject(param || {}),\n  }), [param, client])\n\n  useEffect(() => {\n    console.log(' project 副作用 ： ', param   )// \n    run(\n      fetchProjects(),\n      // 9-5 新配置 刷新\n      {\n        retry: fetchProjects, \n      }\n    )\n  // 10-1 如果把 run 一个非状态的非基本类型是不能放到依赖里的 会导致无限循环\n  // 解决 使用 useCallback 特殊版本的 useMemo 做的事情和用法基本是一样的   \n  }, [\n    param,\n    run, fetchProjects,// 10-1\n  ])\n\n  return result \n}\n\n// 11-3\nexport const useProjects = (param?: Partial<Project>) => {\n  const client = useHttp()\n  console.log(' useProjects ： ', param   )// \n  // query 变化时 自动请求  解决 使用数组的形式 当 第二个参数变化时 自动触发请求\n  // 指定返回类型  解决 src\\Todolist\\tsx\\index.tsx  {error.message}  对象的类型为 \"unknown\"。  报错问题        \n  // return useQuery('projects', () => client('projects', {data: param, }))// \n  return useQuery<Project[], Error>(['projects', param], () => client('projects?', {data: param, }))// \n  return useQuery(['projects', param], () => client('projects', {data: param, }))// \n}\n\n\n// 9-4 hook 只能放到最外层 不能放到函数等内部 \nexport const useEditProject1 = (param?: Partial<Project>) => {\n  const client = useHttp()\n  const {run, ...asyncResult  } = useAsync<Project[]>()\n\n  const mutate = (params: Partial<Project>) => {\n    console.log(' mutate   params: Partial<Project>,   ： ', params )\n    return run(client(`projects/${params.id}`, {\n      data: params, \n      method: 'PATCH',  \n    }))\n  }\n\n  return {\n    mutate,\n    ...asyncResult,\n  } \n}\n\n// 11-3\nexport const useEditProject2 = (param?: Partial<Project>) => {\n  console.log(' useEditProject2 ： ', param   )// \n  const client = useHttp()\n  const queryClient = useQueryClient()\n\n  // 11-6\n  // 使用 专有参数\n  // const searchParams = useProjectsSearchParams()\n\n  // 11-6\n  const [searchParams] = useProjectsSearchParams()\n\n  const queryKey = ['projects', searchParams ]\n\n  return useMutation(\n    (params: Partial<Project>) => client(`projects/${params.id}`, {\n      data: params, \n      method: 'PATCH',  \n    }), {\n      // onSuccess: () => queryClient.invalidateQueries('projects'),\n      onSuccess: () => queryClient.invalidateQueries(queryKey),\n      // 11-6 乐观更新 在状态从服务端返回前 就把状态更新掉 \n      // 从  (params: Partial<Project>  参数推断出来 \n      // 查看源码 发现 泛型参数\n      async onMutate(target: Partial<Project>,  ) {// 了呗调用 \n        console.log(' target   ： ', target, searchParams,  )\n        const previousItems = queryClient.getQueryData(queryKey)\n        console.log(' previousItems ： ', previousItems,  )// \n        // queryClient.setQueryData(queryKey, (old?: Project[]) => {// queryKey 代表了  project 列表\n        // queryClient.setQueryData(queryKey, (old?: any[]) => {// queryKey 代表了  project 列表\n        //   return old?.map(project => project.id === target.id ? {...project, ...target} : project) \n        // })// 设置缓存数据 \n        return {previousItems} \n      },\n      // 出错 就调用 onErro  把数据回滚掉  因为想实现乐观更新所以这么写 \n      // onError(error: TError, newItem: Partial<Project>, context: TContext | undefined ) {\n      //   console.log(' onError ： ', error, queryKey, newItem, context, )\n      //   queryClient.setQueryData(queryKey, context.previousItems)// context 获取到的就是 onMutate  返回的内容 \n      // },\n      onError(error, newItem: Partial<Project>, context: any ) {// 解决 要么把参数类型改为 any 要么 as  转换参数类型\n      // onError(error, newItem: Partial<Project>, context: TContext | undefined) {// 解决 要么把参数类型改为 any 要么 as  转换参数类型\n      // onError(error, newItem, context) {// 解决 要么把参数类型改为 any 要么 as  转换参数类型\n        console.log(' onError ： ', error, queryKey, newItem, context, )\n        queryClient.setQueryData(queryKey, (context as {previousItems: Project[]}).previousItems)// context 获取到的就是 onMutate  返回的内容 \n      },\n    },\n    \n  )\n}\n\nexport const useEditProject = (queryKey: QueryKey) => {\n  console.log(' useEditProject ： ', queryKey   )// \n  const client = useHttp()\n  // const queryKey = ['projects', useProjectsSearchParams()]// 不在这里写 使用参数传入 解除 耦合\n\n  return useMutation(\n    (params: Partial<Project>) => client(`projects/${params.id}`, {\n      data: params, \n      method: 'PATCH',  \n    }), \n    useEditConfig(queryKey),\n  )\n}\n\nexport const useAddProject1 = (param?: Partial<Project>) => {\n  const client = useHttp()\n  const {run, ...asyncResult  } = useAsync<Project[]>()\n\n  const mutate = (params: Partial<Project>) => {\n    console.log(' mutate   params: Partial<Project>,   ： ', params )\n    return run(client(`projects/${params.id}`, {\n      data: params,\n      method: 'POST',  \n    }))\n  }\n\n  return {\n    mutate,\n    ...asyncResult,\n  } \n}\n\n// 11-3\n// export const useAddProject = (param?: Partial<Project>) => {\n//   const client = useHttp()\n//   const queryClient = useQueryClient()\n//   console.log(' useAddProject ： ', param   )// \n\n//   return useMutation(\n//     (params: Partial<Project>) => client(`projects/${params.id}`, {\n//       data: params,\n//       method: 'POST',  \n//     }), \n//     {\n//       onSuccess: () => queryClient.invalidateQueries('projects'),\n//     }\n//   )\n// }\n\n// 11-6\nexport const useAddProject = (queryKey: QueryKey) => {\n  console.log(' useAddProject ： ', queryKey   )// \n  const client = useHttp()\n  const queryClient = useQueryClient()\n\n  return useMutation(\n    (params: Partial<Project>) => client(`projects`, {\n      data: params, \n      method: 'POST',  \n    }), \n    useAddConfig(queryKey),\n  )\n}\n\n// 11-7\nexport const useDeleteProject = (queryKey: QueryKey) => {\n  console.log(' useDeleteProject ： ', queryKey   )// \n  const client = useHttp()\n  return useMutation(\n    ({id}: {id: number}) => client(`projects/${id}`, {\n      method: 'DELETE',  \n    }), \n    useDeleteConfig(queryKey),\n  )\n}\n\n// 11-4\nexport const useProject = (id?: number) => {\n  const client = useHttp()\n  console.log(' useProject ： ', id,  )// \n  return useQuery<Project>(\n    [\n      'projects', {id}\n    ], \n    () => client(`projects/${id}`,),\n    {\n      // enabled: !!id, \n      enabled: Boolean(id), \n    }\n  )\n\n}\n\n// 12-8\nexport const useTask = (id?: number) => {\n  const client = useHttp()\n  console.log(' useTask ： ', id,  )// \n  return useQuery<Project>(\n    [\n      'task', {id}\n    ], \n    () => client(`task/${id}`,),\n    {\n      enabled: Boolean(id), \n    }\n  )\n}\n\n\n\n\n","// 10-10\nimport { createSlice,  } from '@reduxjs/toolkit'// \nimport { RootState } from 'store'\n\n// 借助于一个非常流行的库 immer 让数据不可变   直接改变原对象 会导致无法渲染的问题 \n// immer  会在底层帮我们新建一个对象 然后把函数里的操作映射到对象上 以 不干净的写法 完成干净的事情 \n\nexport interface State {\n  projectModalOpen: boolean    \n}\n\nconst initialState: State = {\n  projectModalOpen: false,  \n}\n\nexport const projectListSlice = createSlice({\n  name: 'projectListSlice', \n  initialState,\n  reducers: {\n    openProjectModal(state, ) {\n      console.log(' openProjectModal ： ', state,  )\n      state.projectModalOpen = true\n    },\n    closeProjectModal(state, ) {\n      console.log(' closeProjectModal ： ', state,  )\n      state.projectModalOpen = false\n    },\n  },  \n})\n\n// 10-11\nexport const projectListActions = projectListSlice.actions\n\n// 10-11\nexport const selectProjectModalOpen = (state: RootState,  ) => {\n  console.log(' selectProjectModalOpen   ： ',  state,   )\n  return state.projectList.projectModalOpen \n}\n\n","import React, { useState, useEffect } from 'react';\nimport { User } from './search-panel';\nimport { Dropdown, Menu, Modal, Table, TableProps,  } from 'antd'// \nimport dayjs from 'dayjs'// \nimport { Link } from 'react-router-dom';\nimport { Pin } from 'components/pin';\nimport { useEditProject } from 'utlis/project';\nimport { ButtonNoPadding } from 'components/lib';\nimport { projectListActions } from 'Todolist/tsx/project-list.slice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useProjectModal } from 'Todolist/tsx/utli';\nimport { useProjectsQueryKey } from './utli';\nimport { useDeleteConfig } from '../../utlis/use-optimimatic-options';\nimport { useDeleteProject } from '../../utlis/project';\n\n// 3-2\n\n// 4-2\nexport interface Project {\n  // id: string\n  id: number// 9-4 自己修改\n  name: string\n  // personId: string\n  personId: number\n  pin: boolean\n  organization: string\n  created: number// 6-7\n}\n\n// export interface ListProps {\nexport interface ListProps extends TableProps<any>{// 7-1 直接竭诚 表格属性 解决 每次如果父组件添加其它属性 都需要在接口里同步声明\n  list: Project[]\n  users: User[]\n  // 9-5\n  refresh?: () => void,\n  // 10-3\n  // setProjectModalOpen: (isOpen: boolean) => void,\n  projectButton: JSX.Element,\n}\n\nconst List = (props: ListProps) => {\n  console.log(' List   props    ： ', props  )\n  const {list, users, \n    ...rest\n  } = props// \n  // const {mutate} = useEditProject()// 9-4\n  const {mutate} = useEditProject(useProjectsQueryKey())// 11-6\n\n  // const columns = [\n  //   {\n  //     title: '名称',  \n  //     dataIndex: 'name',  \n  //     // localCompare 中文排序\n  //     sorter: (a: any, b: any) => a.name.localeCompare(b.name),\n  //   },\n  //   {\n  //     title: '负责人',  \n  //     render(value, project) {\n  //       return <span>\n  //         {users.find((user: User) => user.id === project.personId)?.name || '未知'}\n  //       </span> \n  //     }\n  //   },\n  // ]\n\n  // 9-4\n  // const pinProject = (id: number, pin: boolean,   ) => mutate({id, pin})\n  const pinProject = (id: number,  ) => (pin: boolean,   ) => {\n    console.log(' pinProject id, pin ： ', id, pin,  )// \n    return mutate({id, pin}) \n    // 9-5\n    // .then(props.refresh)\n  }// 柯理化\n    \n  const dispath = useDispatch()// 10-11 \n\n\n  // 11-5\n  const {startEdit, } = useProjectModal()\n  const editProject = (id: number,  ) => () => {\n    console.log(' editProject id,  ： ', id,  )// \n    return startEdit(id) \n  }// 柯理化\n\n  \n  return <Table pagination={false} \n    {...rest} \n    rowKey={'id'}\n    columns={[\n      {\n        // 9-4\n        title: <Pin checked disabled />, \n        render(value, project) {\n          // return <Pin checked={project.pin} onCheckedChange={(pin) => {\n          //   // mutate(project.id, {pin: true,  })\n          //   mutate({id: project.id, pin,  })\n          // }} />\n\n          return <Pin checked={project.pin} onCheckedChange={pinProject(project.id)} />\n          // return <Pin checked={project.pin} onCheckedChange={(pin) => pinProject(project.id, pin)} />\n          // return <Pin checked={project.pin} onCheckedChange={(pin) => {\n          //   // mutate(project.id, {pin: true,  })\n          //   mutate({id: project.id, pin,  })\n          // }} />\n        }\n      },\n      {\n        title: '名称',  \n        dataIndex: 'name',  \n        // localCompare 中文排序\n        sorter: (a: any, b: any) => a.name.localeCompare(b.name),\n        render(value, project) {\n          // console.log(' value, project ： ', value, project,  )// \n          // 注意 如果 to 类型错误 会导致 to 的路径没有传入to的对应值\n          return <Link to={`${project.id}`} key={project.id} >{project.name} {project.id}</Link> \n        }\n      },\n      {\n        title: '负责人',  \n        render(value, project) {\n          return <span>\n            {users.find((user: User) => user.id === project.personId)?.name || '未知'}\n          </span> \n        }\n      },\n      // 6-7\n      {\n        title: '部门',  \n        dataIndex: 'organization',  \n      },\n      {\n        title: '创建时间',  \n        render(value, project) {\n          return <span>\n            {project.created ? dayjs(project.created).format('YY-MM-DD') : '无'}\n          </span> \n        }\n      },\n      // 10-3\n      {\n        render(value, project) {\n          return <More project={project}></More> // 11-6\n          return <Dropdown overlay={<Menu>\n            {/* 11-5 */}\n            <Menu.Item key={'edit'} onClick={editProject(project.id)}  >\n            </Menu.Item>\n\n\n            <Menu.Item key={'edit'}  >\n              {/* <ButtonNoPadding type={'link'} onClick={() => props.setProjectModalOpen(true)}>编辑</ButtonNoPadding> */}\n              {props.projectButton}\n              {/* 10-11 */}\n              <ButtonNoPadding type={'link'} onClick={() => dispath(projectListActions.openProjectModal())}>编辑</ButtonNoPadding>\n              {/* 11-4 */}\n              {/* <ButtonNoPadding type={'delete'} onClick={() => dispath(projectListActions.openProjectModal())}>删除</ButtonNoPadding> */}\n            </Menu.Item>\n          </Menu>} \n          >\n            <ButtonNoPadding type={'link'} >...</ButtonNoPadding>\n          </Dropdown> \n        }\n      },\n    ]} dataSource={list}\n  /> \n\n\n  return <table>\n    <thead>\n      <tr>\n        <td>名称</td>\n        <td>负责人</td>\n      </tr>\n    </thead>\n    <tbody>\n      {list.map((project, i) => <tr key={project.id}>\n        <td>{project.name}</td>\n        {/* <td>{project.projectName}</td> */}\n        <td>{users.find((user) => user.id === project.personId)?.name || '位置'}</td>\n      </tr>)}\n    </tbody>\n  </table> \n}\n\nexport default List;\n\n\n// 11-7\nconst More = ({project}: {project: Project}) => {\n  console.log(' More   {project},   ： ', project  )\n  const {startEdit} = useProjectModal()\n  const editProject = (id: number) => () => startEdit(id)\n  const {mutate: deleteProject,  } = useDeleteProject(useProjectsQueryKey())\n\n  const confirmDeleteProject = (id: number) => {\n    console.log(' confirmDeleteProject   id: number,   ： ', id  )\n    Modal.confirm({\n      title: '确定删除这个项目吗',\n      content: '点击确定删除',    \n      okText: '确定',  \n      onOk() {\n        console.log(' onOk ： ',  )\n        deleteProject({id})\n      },\n    })// \n  }\n\n  return <Dropdown overlay={<Menu>\n    <Menu.Item key={'edit'} onClick={editProject(project.id)} >编辑</Menu.Item>\n    <Menu.Item key={'edit'} onClick={() => confirmDeleteProject(project.id)} >删除</Menu.Item>\n  </Menu>} \n  >\n    <ButtonNoPadding type={'link'} >...</ButtonNoPadding>\n  </Dropdown> \n}\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport SearchPanel from './search-panel'// \nimport List from './list'// \nimport { cleanObject, useDebounce, useDocumentTitle } from 'utlis';\nimport qs from 'qs'// \nimport { useHttp } from 'utlis/http';\nimport { Button, Typography } from 'antd';\nimport { Project } from 'Todolist/tsx/list';\nimport { useAsync } from 'utlis/use-async';\nimport { useProjects,  } from 'utlis/project';\nimport { useUsers } from 'utlis/user';\nimport { Helmet, } from 'react-helmet';// \nimport Test from 'Todolist/Test'// \nimport { useUrlQueryParam } from 'utlis/url';\nimport { useProjectsSearchParams } from './utli';\nimport { useDispatch } from 'react-redux';\nimport { projectListActions } from 'Todolist/tsx/project-list.slice';\nimport { ErrorBox } from 'components/lib';\n\n// 4-2 改造后发现报错 没有类型文件 但是提示 npm i --save-dev @types/qs  \n// 库的开发者都希望尽可能多的人参与开发 但是如果使用ts无形中提高了门栏  \n// 开发中基本不会用到 d.ts  除非是开发一个库 它是给ts打补丁用的 \n\n// interface 接口就是使用说明书\n\n// 10-3 传入组件渲染而不是传入方法的好处是将方法与组件解耦了 无论怎么改 函数的调用方法 签名都不用改 \n// 就是 定义和调用离得很近 即  component composition  子组件直接消费传递的该组件 一层层传递 解除了耦合 \n// 这种对组件的控制反转减少了要传递的 props 数量 使得代码更加干净 根组件把控更好 \n// 坏处 把逻辑提升到组件树的更高层次来处理\n// 控制反转 把本来需要 把本来需要的某个类的某个方法 通过工厂模式实例化的任务交给容器\n// 即 自己需要自动实例化变为被动 不再考虑如何实例化为其它依赖的类\n\n// 使用 容器实现一个标准化接口 类内部只需要知道 container 容器接口 不需要知道 其它类别   只需要关系渲染它 不需要关系怎么实例化它 传入参数 \n\n// 3-2\nconsole.log(' process.env ： ', process.env,  )// \nconst apiUrl = process.env.REACT_APP_API_URL// 需要重启服务 创建的 env 文件才会生效\n\n// 3-2\n\nconst ProjectListScreen = (props: {\n  // setProjectModalOpen: (isOpen: boolean) => void, \n  projectButton: JSX.Element,\n}) => {\n  console.log(' ProjectListScreen   props    ： ', props  )\n\n  // 4-4 鼠标查看 发现 useState 源码使用到了泛型 如果编写一个函数 接收值 不重要 重要的是返回值的类型 可以使用 泛型 \n  // 保持 类型一直 \n  // js  虽然有 typeof 等判断类型的方法 但是 是运行时才能知道变量类型 \n  // 在函数名后面加上一个 <T> 泛型占位符 然后在参数和 函数里就能使用该 泛型 \n  // const [ param, setParam ] = useState({\n  // const [ , setParam ] = useState({// 8-6\n  //   name: '', \n  //   personId: '',  \n  // })\n\n  // 8-5  查看类型 发现是 const res: {}[]  并且函数自身是 const useUrlQueryParam: (keys: string[]) => {}[]\n  // 解决 给返回值加上 as const \n  // const [ keys, setKeys ] = useState(['name', 'personId' ])\n  const [ keys, setKeys ] = useState<('name' | 'personId')[]>(['name', 'personId' ])// 解决 知道变量的泛型类型 \n  // 注意 如果传入的参数变成 useState 的变量 会导致 param 参数类型变： \n  // const param: {\n  //   [x: string]: string;\n  // }\n  // const [param,  ] = useUrlQueryParam(keys)\n\n  // const param: {\n  //   name: string;\n  //   personId: string;\n  // }\n  // const [\n  //   param, \n  //   setParam// 8-7\n  // ] = useUrlQueryParam(['name', 'personId' ]) \n\n  // const [ users, setUsers ] = useState([])\n  // const [ list, setList ] = useState([])\n\n  // // 9-2\n  // const projectsParam = {\n  //   ...param,\n  //   personId: Number(param.personId) || undefined \n  // }\n\n  // 3-4\n  // const debouncedParam = useDebounce(param, 2000)// 8-6 视频里因为 param 每次返回的对象不同导致 重新渲染 \n  // const debouncedParam = useDebounce(projectsParam, 200)// 9-2 解决赋值类型报错问题 \n  // console.log(' useDebounce debouncedParam ： ', debouncedParam,  )// \n\n  // 5-8\n  const client = useHttp()\n\n  // 7-1\n  // const [ isLoading, setIsLoading ] = useState(false)\n  // const [ error, setError ] = useState<null | Error>(null)\n    \n\n  // 7-2\n  // const {run, isLoading, error, data: list,  } = useAsync<Project[]>()\n  // const {isLoading, error, data: list,  } = useProjects(debouncedParam)\n\n\n  // 9-2\n  const [\n    param,\n    setParam\n  ] = useProjectsSearchParams()\n  console.log(' searchParams param,   ：', param,    )// \n  const debouncedParam = useDebounce(param, 200)\n  const {isLoading, error, data: list, \n    // retry,// 11-3 修改 useProjects 代码 去除了返回内容\n  } = useProjects(debouncedParam)\n  \n\n  useEffect(() => {\n    console.log(' project 副作用 ： ', param   )// \n\n\n    // // 7-2\n    // run(client('projects', {\n    //   data: cleanObject(debouncedParam),\n    // }))\n\n\n    // setIsLoading(true)//7-1\n\n    // // 5-7\n    // client('projects', {\n    //   data: cleanObject(debouncedParam),\n    // }).then(setList)\n    // .finally(() => {\n    //   console.log(' setErrorsetError finally ： ',    )// \n    //   setIsLoading(false)\n    // })// \n    // .catch((err) => {\n    //   console.log(' setErrorsetError ： ', err,   )// \n    //   setError(err)\n    // })// \n\n\n\n\n    // 注意 搜索文本等需要全部匹配才会返回 \n    // fetch(`${apiUrl}/projects?name=${param.name}&personId=${param.personId}`).then(async res => {\n    // fetch(`${apiUrl}/projects?${qs.stringify(cleanObject(param))}`).then(async res => {\n      \n    // 改完参数类型后发现 debouncedParam 报错  类型“unknown”的参数不能赋给类型“object”的参数\n    // let vars: unknown   unknown 类型的参数可以赋任何值给该变量  但是 unknown 类型变量不能赋给任何值 也不能从 unknown 上面读取任何属性 \n    // let vars: unknown\n    // vars = undefined \n    // 解决方法： 给函数返回值 加上类型声明 、 泛型 \n\n    // fetch(`${apiUrl}/projects?${qs.stringify(cleanObject(debouncedParam))}`).then(async res => {\n    //   console.log(' projectproject res  ： ', res,  )\n    //   if (res.ok) {\n    //     setList(await res.json())\n    //   }\n    // })\n  // }, [param])\n  }, [debouncedParam])\n\n  // useEffect(() => {\n  //   console.log(' users 副作用 ： ',    )// \n  //   // 5-7\n  //   client('users').then(setUsers)\n  //   // fetch(`${apiUrl}/users`).then(async res => {\n  //   //   console.log(' projectproject res  ： ', res,  )\n  //   //   if (res.ok) {\n  //   //     setUsers(await res.json())\n  //   //   }\n  //   // })\n  // }, [])\n\n  // 7-2\n  const {data: users,  } = useUsers()\n\n  useDocumentTitle('项目列表', false)\n    \n  const dispath = useDispatch()// 10-11 \n    \n  return <div>\n\n    {/* <Test></Test> */}\n\n    <h1>项目列表</h1>\n    {/* <Helmet>\n      <title>项目列表</title>\n    </Helmet> */}\n\n    {/* 10-3 */}\n    {/* <Button type={'link'} onClick={() => props.setProjectModalOpen(true)} >创建项目</Button> */}\n    {props.projectButton}\n    <Button type={'link'} onClick={() => dispath(projectListActions.openProjectModal())} >R创建项目</Button>\n\n    {/* <Button onClick={retry} >retry</Button> */}\n\n    <SearchPanel\n\n      // 8-6 类型“{ [key: string]: string; }”缺少类型“{ name: string; personId: string; }”中的以下属性: name, personId\n      // 直接赋路由参数值报错 原因返回值是 string 但是 组件接收参数类型要求是对象\n      // 解决 使用泛型处理 不指定返回类型 \n      param={param}// 报错 不能将类型“undefined”分配给类型“string”。  \n      setParam={setParam}\n      users={users || []}\n    ></SearchPanel>\n\n    {/* {error ? <Typography.Text type={'danger'}  >\n      {error.message}\n    </Typography.Text> */}\n    {/* 11-3 */}\n    <ErrorBox error={error}></ErrorBox>\n    \n\n    <List\n      list={list || []}// 7-2 使用 useAsync 后报错 不能将类型“Project[] | null”分配给类型“Project[]”。  解决 加判断赞值\n      users={users || []}\n\n      loading={isLoading}\n\n      // 9-5\n      // refresh={retry}\n      // 10-3\n      // setProjectModalOpen={props.setProjectModalOpen}\n      projectButton={props.projectButton}\n    ></List>\n  </div> \n}\n\n// 806  然后查看控制台会发现输出 prev 和 next 2个对象 他们的值虽然一样 但是js里对象引用的值不同 导致比较结果是不同 所以无限渲染 \n// ProjectListScreen.whyDidYouRender = true \n\n// 如果是类组件的话 相当于如下：\n// class Test extends React.PureComponent<any, any>, {\n//   static whyDidYouRender = true \n// }\n\nexport default ProjectListScreen;\n","var _defs, _g;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSoftwareLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 179 32\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    focusable: \"false\",\n    \"aria-hidden\": \"true\",\n    className: \"css-sq9aeg-Logo\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    x1: \"97.6553341%\",\n    y1: \"35.6591143%\",\n    x2: \"37.202032%\",\n    y2: \"75.4891864%\",\n    id: \"uid392-1\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#0052CC\",\n    offset: \"7%\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#2684FF\",\n    offset: \"100%\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    x1: \"8.43371138%\",\n    y1: \"60.1495759%\",\n    x2: \"64.1161517%\",\n    y2: \"23.5790285%\",\n    id: \"uid392-2\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#0052CC\",\n    offset: \"0%\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#2684FF\",\n    offset: \"100%\"\n  })))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    stroke: \"none\",\n    strokeWidth: 1,\n    fillRule: \"nonzero\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.3881081,27.9242105 C12.4881804,26.8071817 13.1062496,25.2917664 13.1062496,23.7115789 C13.1062496,22.1313915 12.4881804,20.6159762 11.3881081,19.4989474 L11.3881081,19.4989474 L3.74837838,11.7621053 L0.273513514,15.2926316 C-0.0900771727,15.6625064 -0.0900771727,16.2617042 0.273513514,16.6315789 L11.3881081,27.9242105 L11.3881081,27.9242105 Z\",\n    fill: \"currentColor\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22.5027027,15.2926316 L11.3881081,4 L11.3881081,4 L11.3539189,4.03473684 L11.3539189,4.03473684 C9.08852466,6.36456187 9.09963243,10.1156459 11.3787838,12.4315789 L19.0247297,20.1652632 L22.5027027,16.6315789 C22.8662934,16.2617042 22.8662934,15.6625064 22.5027027,15.2926316 Z\",\n    fill: \"currentColor\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.3881081,12.4252632 C9.10895676,10.1093301 9.09784899,6.35824608 11.3632432,4.02842105 L3.43445946,12.0810526 L7.58067568,16.2936842 L11.3881081,12.4252632 Z\",\n    fill: \"url(#uid392-1)\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.1893243,15.6368421 L11.3881081,19.4989474 C12.4881804,20.6159762 13.1062496,22.1313915 13.1062496,23.7115789 C13.1062496,25.2917664 12.4881804,26.8071817 11.3881081,27.9242105 L19.3355405,19.8494737 L15.1893243,15.6368421 Z\",\n    fill: \"url(#uid392-2)\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M36.07,18.956 C36.07,20.646 35.394,21.842 33.418,21.842 C32.56,21.842 31.702,21.686 31,21.4 L31,23.662 C31.65,23.896 32.586,24.104 33.808,24.104 C37.032,24.104 38.41,21.946 38.41,18.8 L38.41,6.918 L36.07,6.918 L36.07,18.956 Z M41.894,7.568 C41.894,8.556 42.544,9.128 43.454,9.128 C44.364,9.128 45.014,8.556 45.014,7.568 C45.014,6.58 44.364,6.008 43.454,6.008 C42.544,6.008 41.894,6.58 41.894,7.568 Z M42.31,24 L44.546,24 L44.546,11 L42.31,11 L42.31,24 Z M47.926,24 L50.11,24 L50.11,16.33 C50.11,13.574 51.852,12.716 54.712,13.002 L54.712,10.818 C52.164,10.662 50.864,11.754 50.11,13.288 L50.11,11 L47.926,11 L47.926,24 Z M65.45,24 L65.45,21.66 C64.618,23.376 63.058,24.26 61.056,24.26 C57.598,24.26 55.856,21.322 55.856,17.5 C55.856,13.834 57.676,10.74 61.316,10.74 C63.214,10.74 64.67,11.598 65.45,13.288 L65.45,11 L67.686,11 L67.686,24 L65.45,24 Z M58.092,17.5 C58.092,20.62 59.34,22.18 61.654,22.18 C63.656,22.18 65.45,20.906 65.45,18.02 L65.45,16.98 C65.45,14.094 63.812,12.82 61.914,12.82 C59.392,12.82 58.092,14.484 58.092,17.5 Z M86.926,19.294 C86.926,16.226 84.898,15.056 81.284,14.146 C78.268,13.392 77.176,12.69 77.176,11.286 C77.176,9.726 78.502,8.946 80.738,8.946 C82.506,8.946 84.352,9.258 86.068,10.246 L86.068,7.906 C84.898,7.256 83.312,6.658 80.842,6.658 C76.864,6.658 74.836,8.634 74.836,11.286 C74.836,14.094 76.552,15.42 80.4,16.356 C83.65,17.136 84.586,17.942 84.586,19.45 C84.586,20.958 83.624,21.972 81.05,21.972 C78.788,21.972 76.344,21.374 74.758,20.542 L74.758,22.934 C76.084,23.61 77.618,24.26 80.92,24.26 C85.158,24.26 86.926,22.258 86.926,19.294 Z M95.09,24.26 C91.19,24.26 88.902,21.374 88.902,17.474 C88.902,13.574 91.19,10.74 95.09,10.74 C98.964,10.74 101.226,13.574 101.226,17.474 C101.226,21.374 98.964,24.26 95.09,24.26 Z M95.09,12.82 C92.308,12.82 91.086,15.004 91.086,17.474 C91.086,19.944 92.308,22.18 95.09,22.18 C97.846,22.18 99.042,19.944 99.042,17.474 C99.042,15.004 97.846,12.82 95.09,12.82 Z M106.92,9.622 C106.92,8.452 107.596,7.646 108.974,7.646 C109.494,7.646 109.988,7.698 110.378,7.776 L110.378,5.722 C109.988,5.618 109.546,5.514 108.87,5.514 C106.088,5.514 104.736,7.152 104.736,9.57 L104.736,11 L102.63,11 L102.63,13.08 L104.736,13.08 L104.736,24 L106.92,24 L106.92,13.08 L110.274,13.08 L110.274,11 L106.92,11 L106.92,9.622 Z M115.786,19.892 L115.786,13.08 L119.244,13.08 L119.244,11 L115.786,11 L115.786,8.244 L113.602,8.244 L113.602,11 L111.496,11 L111.496,13.08 L113.602,13.08 L113.602,19.944 C113.602,22.362 114.954,24 117.736,24 C118.412,24 118.854,23.896 119.244,23.792 L119.244,21.634 C118.854,21.712 118.36,21.816 117.84,21.816 C116.462,21.816 115.786,21.036 115.786,19.892 Z M125.432,24 L128.292,24 L130.528,17.708 L131.724,13.704 L132.92,17.708 L135.156,24 L138.016,24 L142.8,11 L140.33,11 L136.586,22.024 L132.79,11 L130.658,11 L126.862,22.024 L123.118,11 L120.648,11 L125.432,24 Z M153.538,24 L153.538,21.66 C152.706,23.376 151.146,24.26 149.144,24.26 C145.686,24.26 143.944,21.322 143.944,17.5 C143.944,13.834 145.764,10.74 149.404,10.74 C151.302,10.74 152.758,11.598 153.538,13.288 L153.538,11 L155.774,11 L155.774,24 L153.538,24 Z M146.18,17.5 C146.18,20.62 147.428,22.18 149.742,22.18 C151.744,22.18 153.538,20.906 153.538,18.02 L153.538,16.98 C153.538,14.094 151.9,12.82 150.002,12.82 C147.48,12.82 146.18,14.484 146.18,17.5 Z M159.154,24 L161.338,24 L161.338,16.33 C161.338,13.574 163.08,12.716 165.94,13.002 L165.94,10.818 C163.392,10.662 162.092,11.754 161.338,13.288 L161.338,11 L159.154,11 L159.154,24 Z M178.108,23.48 C177.042,24.052 175.404,24.26 174.078,24.26 C169.216,24.26 167.084,21.452 167.084,17.474 C167.084,13.548 169.268,10.74 173.22,10.74 C177.224,10.74 178.836,13.522 178.836,17.474 L178.836,18.488 L169.346,18.488 C169.658,20.698 171.088,22.128 174.156,22.128 C175.664,22.128 176.938,21.842 178.108,21.426 L178.108,23.48 Z M173.116,12.768 C170.75,12.768 169.554,14.302 169.32,16.564 L176.574,16.564 C176.444,14.146 175.352,12.768 173.116,12.768 Z\",\n    fill: \"inherit\",\n    fillRule: \"evenodd\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSoftwareLogo);\nexport default __webpack_public_path__ + \"static/media/software-logo.ec204298.svg\";\nexport { ForwardRef as ReactComponent };","\nimport React, { useState, useEffect, FormEvent,  } from 'react';\nimport { useArray } from 'utlis';\nimport { useAuth } from 'context/auth-context';\nimport { Form, Button, Input,  } from 'antd'// \nimport { LongButton } from 'unauthenticated-app';\nimport { useAsync } from 'utlis/use-async';\n\n\n// 接口 也可以使用泛型和继承 \ninterface Base {\n  id: number\n}\n\ninterface Advance extends Base {\n  name: string\n}\n\nconst vars: Advance = {\n  name: 'zyb', \n  id: 100, \n}\n\n\n// 传入的参数只要具备参数类型必须的字段即可 但是 ts 跟 java的类型兼容还是有区别\n// ts 的是 鸭子类型 即 面向接口编程 而不是 面向对象编程 \n// 即 如果把传入参数的接口类型去掉 但是因为参数对象依然具有接口的相应属性 \nconst test = (p: Base) => {\n  console.log(' test   p: Base,   ： ', p  )\n}\n\ntest(vars)\n\nconst apiUrl = process.env.REACT_APP_API_URL\n\n// const Register = () => {\nconst Register = ({onError}: {onError: (error: Error) => void}) => {// 7-3\n  // 5-5\n  const authData = useAuth()\n  const {register, user,  } = authData\n  console.log(' register user ： ', user, authData )// \n\n\n  const {run, isLoading, error, } = useAsync(undefined, {throwOnError: true,  })// 7-3\n\n  // 如果会动啊函数类型不确定时 可以鼠标看下它的回调函数签名\n  // 如果不指定泛型类型 默认会有 FormEvent<Element>\n  // const handleSubmit = (event: FormEvent) => {\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    console.log(' handleSubmit   event:  ,   ： ', event,   )\n    event.preventDefault()\n    const username = (event.currentTarget.elements[0] as HTMLInputElement).value\n    const password = (event.currentTarget.elements[1] as HTMLInputElement).value\n    console.log(' username, password ： ', username, password,  )// \n    register({\n      username, password, \n    })\n  }\n  const onFinish = async ({cpassword, ...values}: {\n    username: string,  \n    password: string,  \n    cpassword: string,  \n  }) => {\n    console.log(' onFinish   event:  ,   ： ', cpassword, values, cpassword !== values.password  )\n    if (cpassword !== values.password) {\n      onError(new Error('2次密码要一样'))\n      return  \n    }\n    \n    // register(values).catch(onError)// 7-3\n    try {\n      // register(values)\n      // await register(values)\n      await run(register(values))\n    } catch (e) {\n      onError(e)\n    }\n  }\n\n\n  return <Form onFinish={onFinish}>\n    <Form.Item name=\"username\">\n      <Input type=\"text\" id={'username'}  />\n    </Form.Item>\n    <Form.Item name=\"password\">\n      <Input type=\"text\" id={'password'}  />\n    </Form.Item>\n    <Form.Item name=\"cpassword\">\n      <Input type=\"text\" id={'cpassword'}  />\n    </Form.Item>\n    <Form.Item >\n      <LongButton htmlType={'submit'} type={\"primary\"}>注册</LongButton>\n    </Form.Item>\n  </Form> \n  \n  return <form onSubmit={handleSubmit}>\n    <div>\n      <label htmlFor=\"username\">username</label>\n      <input type=\"text\" id={'username'}  />\n    </div>\n    <div>\n      <label htmlFor=\"password\">password</label>\n      <input type=\"text\" id={'password'}  />\n    </div>\n    <button type=\"submit\">注册</button>\n  </form> \n}\n\nexport default Register;\n","import { useAddConfig, useDeleteConfig, useReorderConfig } from './use-optimimatic-options';\n// 12-2\nimport { Project } from 'Todolist/tsx/list';\nimport { useHttp } from 'utlis/http';\nimport { QueryClient, useMutation, useQuery, useQueryClient, QueryKey } from 'react-query';\nimport { Kanban } from 'types/kanban';\n\nexport const useKanbans = (param?: Partial<Kanban>) => {\n  const client = useHttp()\n  console.log(' useKanbans ： ', param,  )// \n\n  return useQuery<Kanban[]>(\n    [\n      'kanbans', param\n    ], \n    () => client('kanbans', {data: param})\n  )\n}\n\nexport const useAddKanban = (queryKey: QueryKey) => {\n  const client = useHttp()\n  console.log(' useAddKanban ： ', queryKey,  )// \n\n  return useMutation(\n    (params: Partial<Kanban>) => client(`kanbans`, {\n      data: params, \n      method: 'POST',  \n    }), \n    useAddConfig(queryKey),\n  )\n}\n\nexport const useDeleteKanban = (queryKey: QueryKey) => {\n  const client = useHttp()\n  console.log(' useDeleteKanban ： ', queryKey,  )// \n\n  return useMutation(\n    ({id}: {id: number}) => client(`kanbans/${id}`, {\n      method: 'DELETE',  \n    }), \n    useDeleteConfig(queryKey),\n  )\n}\n\n// 12-12\nexport interface SortProps {\n  fromId: number// 要重新排序的 item\n  referenceId: number// 目标 item\n  type: 'before' | 'after'// 放在目标 item 的前还是后 \n\n  fromKanbanId?: number\n  toKanbanId?: number\n}\n\nexport const useReorderKanban = (queryKey: QueryKey) => {\n  const client = useHttp()\n  console.log(' useReorderKanban ： ',   )// \n\n  return useMutation(\n    (params: SortProps) => client(`kanbans/reorder`, {\n      data: params, \n      method: 'POST',  \n    }), \n    useReorderConfig(queryKey)\n  );\n}\n\n\n\n\n\n\n\n\n","import { useCallback, useMemo } from 'react';\r\nimport { useLocation } from 'react-router';\r\nimport { useProject, useTask,  } from 'utlis/project';\r\nimport { useUrlQueryParam } from 'utlis/url';\r\nimport { useDebounce } from 'utlis';\r\n\r\n// 12-3\r\nexport const useProjectIdInUrl = () => {\r\n  const {pathname} = useLocation()\r\n  const id = pathname.match(/projects\\/(\\d+)/)?.[1]\r\n  return Number(id)// \r\n}\r\n\r\nexport const useProjectInUrl = () => useProject(useProjectIdInUrl())\r\n\r\nexport const useKanBanSearchParams = () => ({projectId: useProjectIdInUrl(), })\r\nexport const useKanbanQueryKey = () => ['kanbans', useKanBanSearchParams()]\r\n// export const useTasksSearchParams = () => ({projectId: useProjectIdInUrl(), })\r\n\r\n// 12-5\r\nexport const useTasksSearchParams = () => {\r\n  const [param, setParam] = useUrlQueryParam([\r\n    'name',\r\n    'typeId',\r\n    'processorId',\r\n    'tagId',\r\n  ])\r\n\r\n  const debounceName = useDebounce(param.name, 200)// 12-9\r\n\r\n\r\n  const projectId = useProjectIdInUrl()\r\n  return useMemo(() => ({\r\n    projectId,\r\n    typeId: Number(param.typeId) || undefined,  \r\n    processorId: Number(param.processorId) || undefined,  \r\n    tagId: Number(param.tagId) || undefined,  \r\n    // name: param.name, \r\n    name: debounceName, // 12-9\r\n  }), [\r\n    projectId, param\r\n  ]) \r\n}\r\n\r\nexport const useTasksQueryKey = () => ['tasks', useTasksSearchParams()]\r\n\r\n// 12-8\r\nexport const useTasksModal = () => {\r\n  const [\r\n    {editingTaskId},\r\n    setEditingTaskId,\r\n  ] = useUrlQueryParam([\r\n    'editingTaskId',\r\n  ])\r\n  const {\r\n    data: editingTask,\r\n    isLoading,\r\n  } = useTask(Number(editingTaskId))\r\n\r\n  console.log(' editingTask, editingTaskId,seteditingTask, EditingTaskId ： ', editingTask, editingTaskId,setEditingTaskId,  )// \r\n  const startEdit = useCallback((id: number) => {\r\n    console.log(' startEdit   id: number,   ： ', id,  )\r\n    setEditingTaskId({editingTaskId: id, })\r\n  }, [setEditingTaskId])\r\n\r\n  const close = useCallback(() => {\r\n    console.log(' close  ,   ： ',  )\r\n    setEditingTaskId({editingTaskId: '', })\r\n  }, [setEditingTaskId])\r\n  \r\n\r\n  return {\r\n    editingTaskId,\r\n    editingTask,\r\n    startEdit,\r\n    close,\r\n    isLoading,\r\n  } \r\n}\r\n\r\n\r\n","import { SortProps } from './kanban';\nimport { useAddConfig, useDeleteConfig, useReorderConfig, useReorderTaskConfig } from './use-optimimatic-options';\n// 12-2\nimport { Project } from 'Todolist/tsx/list';\nimport { useHttp } from 'utlis/http';\nimport { QueryClient, useMutation, useQuery, useQueryClient, QueryKey } from 'react-query';\nimport { Task } from 'types/task';\n\nexport const useTasks = (param?: Partial<Task>) => {\n  const client = useHttp()\n  console.log(' useTasks ： ', param,  )// \n\n  return useQuery<Task[]>(\n    [\n      'tasks', param\n    ], \n    // 如果2s内有 相同的 query-key 发出请求 只会发出其中一个请求\n    () => client('tasks', {data: param})\n  )\n}\n\n// 12-7\nexport const useAddTask = (queryKey: QueryKey) => {\n  const client = useHttp()\n  console.log(' useAddTask ： ', queryKey,  )// \n\n  return useMutation(\n    (params: Partial<Task>) => client(`tasks`, {\n      data: params, \n      method: 'POST',  \n    }), \n    useAddConfig(queryKey),\n  )\n}\n\n// 12-8\nexport const useTask = (id?: number,  ) => {\n  const client = useHttp()\n  console.log(' useTask ： ', id,  )// \n\n  return useQuery<Project>(\n    [\n      'task', {id}\n    ], \n    () => client(`tasks/${id}`,),\n    {\n      enabled: Boolean(id), \n    }\n  )\n}\n\nexport const useEditTask = (queryKey: QueryKey) => {\n  const client = useHttp()\n  console.log(' useEditTask ： ', queryKey,  )// \n\n  return useMutation(\n    (params: Partial<Task>) => client(`projects/${params.id}`, {\n      data: params, \n      method: 'PATCH',  \n    }), \n    useAddConfig(queryKey),\n  )\n}\n\n// 12-9\nexport const useDeleteTask = (queryKey: QueryKey) => {\n  console.log(' useDeleteTask ： ', queryKey   )// \n  const client = useHttp()\n  return useMutation(\n    ({id}: {id: number}) => client(`tasks/${id}`, {\n      method: 'DELETE',  \n    }), \n    useDeleteConfig(queryKey),\n  )\n}\n\n// 12-12\nexport const useReorderTask = (queryKey: QueryKey) => {\n  const client = useHttp()\n  console.log(' useReorderTask ： ',   )// \n\n  return useMutation(\n    (params: SortProps) => client(`tasks/reorder`, {\n      data: params, \n      method: 'POST',  \n    }), \n    // useReorderConfig(queryKey)\n    // 12-14\n    useReorderTaskConfig(queryKey)\n  );\n}\n\n\n\n\n\n\n\n\n\n","export default __webpack_public_path__ + \"static/media/task.69774797.svg\";","export default __webpack_public_path__ + \"static/media/bug.5d8e8fd5.svg\";","// 12-7\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useProjectIdInUrl, useKanbanQueryKey,  } from './utli';\r\nimport { Button, Input, Card,  } from 'antd';\r\nimport { useAddTask } from 'utlis/task';\r\nimport { Container } from './kanban-column';\r\n\r\n\r\nconst CreateTask = ({kanbanId}: {kanbanId: number}) => {\r\n  console.log(' CreateTask       ： ', kanbanId,  )\r\n  const [ name, setName ] = useState('')\r\n  const projectId = useProjectIdInUrl()\r\n  const {mutateAsync: addTask,  } = useAddTask(useKanbanQueryKey())\r\n  const [ inputMode, setInputMode ] = useState(false)\r\n  \r\n  const submit = async () => {\r\n    console.log(' CreateTask submit ： ', projectId, name, kanbanId,  )\r\n    const res = await addTask({projectId, name, kanbanId, })\r\n    console.log(' CreateTask submit await的结果： ： ', res,  )\r\n    setInputMode(false)    \r\n  }\r\n\r\n  const toggle = () => setInputMode(mode => !mode)\r\n\r\n  useEffect(() => {\r\n    if (!inputMode) {\r\n      setName('')\r\n    }\r\n  }, [inputMode])\r\n\r\n  if (!inputMode) {\r\n    return <div onClick={toggle}>创建事物</div> \r\n  }\r\n\r\n  return <Card>\r\n    <Input \r\n      onBlur={toggle}\r\n      placeholder={'需要做些什么'} \r\n      autoFocus\r\n      onPressEnter={submit}\r\n      value={name}\r\n      onChange={(evt) => setName(evt.target.value)}\r\n    />\r\n  </Card> \r\n}\r\n\r\nexport default CreateTask;\r\n","\n// 12-9\nimport { Select } from 'antd';\nimport React from 'react';\n\n\nconst Mark = ({name, keyword}: {name: string, keyword: string}) => {\n  console.log(' Mark       ： ', name, keyword  )\n  if (!keyword) {\n    return <>\n      {name}\n    </> \n  }\n\n  const arr = name.split(keyword)\n  \n  return <>\n    {arr.map((str: string, index: number) => <span key={index}>\n      {str}\n      {\n        index === arr.length - 1 ? null : <span style={{color: '#257afd', }} >{keyword}</span>\n      }\n    </span>)}\n  </>\n}\n\nexport default Mark // \n","\n// 12-10\nimport { DraggerProps } from 'antd/lib/upload';\nimport React, {Children, PropsWithChildren, ReactElement, ReactNode} from 'react';\nimport { Droppable, Draggable, DroppableProps, DroppableProvided, DroppableProvidedProps, DraggableProps } from 'react-beautiful-dnd';\n\n// 因为 children 是函数 但是我们不想要 所以 &  修改为 ReactNode \ntype DropProps = Omit<DroppableProps, 'children'> & {children: ReactNode}\n\nexport const Drop = ({children, ...props}: DropProps) => {\n  console.log(' Mark       ： ', props,   )\n  \n  return <Droppable {...props} >\n    {\n      (provided) => {\n        if (React.isValidElement(children)) {\n          return React.cloneElement(children, {\n            ...provided.droppableProps,\n            ref: provided.innerRef, \n            provided, \n          }) \n        }\n        return <div>\n          \n        </div> \n      }\n    }\n  </Droppable>\n}\n\n// HTMLDivElement 表示函数返回的 html 标签   \ntype DropChildProps = Partial<{provided: DroppableProvided} & DroppableProvidedProps> & React.HTMLAttributes<HTMLDivElement>\n\n\n// const DropChild = React.forwardRef<HTMLDivElement, >((props: PropsWithChildren<{}>, ref) => {\n// export const DropChild = React.forwardRef<HTMLDivElement, DropChildProps>((props, ref) => {\n// 12-11\nexport const DropChild = React.forwardRef<HTMLDivElement, DropChildProps>((\n  {children, ...props}, ref) => {\n  console.log(' DropChild       ： ',   )\n  return <div ref={ref} {...props}  >\n    {/* 12-11 */}\n    {children}\n    {/* api 要求 */}\n    {props.provided?.placeholder}\n  </div> \n})\n\ntype DragProps = Omit<DraggableProps, 'children'> & {children: ReactNode}\n\n// 需要给对应的组件转发 ref  否则会报错  provided.innerRef has not been provided with a HTMLElement.\nexport const Drag = ({children, ...props}: DragProps) => {\n  console.log(' Drag       ： ', props  )\n  return <Draggable {...props}  >\n    {\n      (provided) => {\n        if (React.isValidElement(children)) {\n          return React.cloneElement(children, {\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            ref: provided.innerRef, \n          }) \n        }\n        return <div>\n          \n        </div> \n      }\n    }\n  </Draggable> \n}\n  ","// 12-3\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDocumentTitle } from 'utlis';\r\nimport { useDeleteKanban, useKanbans } from 'utlis/kanban';\r\nimport { useTasks } from 'utlis/task';\r\nimport { useProjectInUrl, useTasksSearchParams, useTasksModal, useKanbanQueryKey } from './utli';\r\nimport { Kanban } from 'types/kanban';\r\nimport taskIcon from 'assets/task.svg'// \r\nimport bugIcon from 'assets/bug.svg'// \r\nimport styled from \"@emotion/styled\";\r\nimport { Card, Menu, Dropdown, Button, Modal } from 'antd';\r\nimport { useTaskTypes } from 'utlis/task-type';\r\nimport CreateTask from './create-task';\r\nimport Mark from 'components/mark';\r\nimport { Task } from 'types/task';\r\nimport { useKanBanSearchParams } from 'screens/kanban/utli';\r\nimport { Row } from 'components/lib';\r\nimport { Drag, Drop, DropChild } from 'components/drag-and-drop';\r\n\r\n\r\n// 12-9\r\nconst More = ({kanban}: {kanban: Kanban}) => {\r\n  console.log(' More       ： ', kanban  )\r\n  const startEidt = () => {\r\n    console.log(' startEidt   ,   ： ',   )\r\n    Modal.confirm({\r\n      okText: '确定',  \r\n      cancelText: '取消',  \r\n      title: '确定删除看板吗', \r\n      onOk() {\r\n        console.log(' onOk ： ', kanban )\r\n        return mutateAsync({id: kanban.id, })\r\n      },\r\n    })// \r\n  }\r\n\r\n  const {mutateAsync,  } = useDeleteKanban(useKanbanQueryKey())\r\n  const overlay = <Menu>\r\n    <Menu.Item>\r\n      <Button type={'link'} onClick={startEidt} >删除</Button>\r\n    </Menu.Item>\r\n  </Menu>\r\n\r\n  return <Dropdown overlay={overlay} >\r\n    <Button type={'link'} >...</Button>\r\n  </Dropdown>\r\n}\r\n\r\nconst TaskCard = ({task}: {task: Task, }) => {\r\n  console.log(' TaskCard   {task},   ： ', task  )\r\n  const {startEdit, } = useTasksModal()\r\n  const {name: keyword,  } = useTasksSearchParams()\r\n\r\n  return <Card \r\n    style={{marginBottom: '0.5rem', cursor: 'pointer',   }}\r\n    onClick={() => startEdit(task.id) }// 12-8\r\n  >\r\n    {/* <div>{task.name}</div> */}\r\n    <Mark keyword={keyword} name={task.name} ></Mark>\r\n    <TaskTypeIcon id={task.typeId}  ></TaskTypeIcon>\r\n  </Card>\r\n}\r\n\r\n// 12-4\r\nconst TaskTypeIcon = ({id}: {id: number}) => {\r\n  console.log(' TaskTypeIcon       ： ', id  )\r\n  const {data: taskTypes} = useTaskTypes()\r\n  const name = taskTypes?.find((taskType) => taskType.id === id)?.name\r\n  console.log(' name  TaskTypeIcon .find v ： ', taskTypes, name,   )\r\n  // if (!name) return null// \r\n  return <img src={name === 'task' ? taskIcon : bugIcon} />\r\n}\r\n\r\n\r\nconst KanbanColumn2 = ({kanban}: {kanban: Kanban}) => {\r\n  console.log(' KanbanColumn       ： ',   )\r\n  const {data: allTasks} = useTasks(useTasksSearchParams())\r\n  // const tasks = allTasks?.filter((task) => task.kanbanId === kanban.id)\r\n  const tasks = [\r\n    {\r\n      id: 1,\r\n      name: 'string',\r\n      processorId: 1,\r\n      projectId: 1,\r\n      epicId: 1,\r\n      kanbanId: 1,\r\n      typeId: 1,\r\n      note: 'string',\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'string',\r\n      processorId: 1,\r\n      projectId: 1,\r\n      epicId: 1,\r\n      kanbanId: 1,\r\n      typeId: 1,\r\n      note: 'string',\r\n    },\r\n  ]\r\n  console.log(' tasks  allTasks.filter v ： ', tasks,   )\r\n  const {startEdit} = useTasksModal()// 12-8\r\n\r\n  return <Container  >\r\n    <Row between>\r\n      <h3>\r\n        name: {kanban.name}\r\n      </h3>\r\n      <More kanban={kanban}\r\n        key={kanban.id}  // 12-11\r\n      ></More>\r\n    </Row>\r\n\r\n    {/* <TasksContainer>\r\n    </TasksContainer> */}\r\n\r\n    {/* {tasks?.map((task, i) => <Card key={task.id} \r\n      style={{marginBottom: '0.5rem', cursor: 'pointer',   }}\r\n      onClick={() => startEdit(task.id)}// 12-8\r\n    >\r\n      <div>{task.name}</div>\r\n      <TaskTypeIcon id={task.typeId}  ></TaskTypeIcon>\r\n    </Card>)} */}\r\n    {tasks?.map((task, i) => <TaskCard key={task.id} task={task} ></TaskCard>)}\r\n\r\n    <CreateTask kanbanId={kanban.id} />\r\n    \r\n  </Container> \r\n}\r\n\r\n// const KanbanColumn = React.forwardRef<HTMLDivElement, {kanban: Kanban}>((\r\n//   {children, ...props}, ref) => {\r\n//   return <KanbanColumn {...props}  ></KanbanColumn>\r\n// })\r\n\r\nconst KanbanColumn = React.forwardRef<HTMLDivElement, {kanban: Kanban}>(({kanban, ...props}: {kanban: Kanban}, ref) => {\r\n  console.log(' KanbanColumn       ： ', kanban, ref,   )\r\n  const {data: allTasks} = useTasks(useTasksSearchParams())\r\n  // const tasks = allTasks?.filter((task) => task.kanbanId === kanban.id)\r\n  const tasks = [\r\n    {\r\n      id: 1,\r\n      name: 'string',\r\n      processorId: 1,\r\n      projectId: 1,\r\n      epicId: 1,\r\n      kanbanId: 1,\r\n      typeId: 1,\r\n      note: 'string',\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'string',\r\n      processorId: 1,\r\n      projectId: 1,\r\n      epicId: 1,\r\n      kanbanId: 1,\r\n      typeId: 1,\r\n      note: 'string',\r\n    },\r\n  ]\r\n  console.log(' tasks  allTasks.filter v ： ', tasks,   )\r\n  const {startEdit} = useTasksModal()// 12-8\r\n\r\n  return <Container \r\n    ref={ref}\r\n    {...props} \r\n  >\r\n    <Row between>\r\n      <h3>\r\n        name: {kanban.name}\r\n      </h3>\r\n      <More kanban={kanban}\r\n        key={kanban.id}  // 12-11\r\n      ></More>\r\n    </Row>\r\n\r\n    {/* <TasksContainer>\r\n    </TasksContainer> */}\r\n\r\n    {/* {tasks?.map((task, i) => <Card key={task.id} \r\n      style={{marginBottom: '0.5rem', cursor: 'pointer',   }}\r\n      onClick={() => startEdit(task.id)}// 12-8\r\n    >\r\n      <div>{task.name}</div>\r\n      <TaskTypeIcon id={task.typeId}  ></TaskTypeIcon>\r\n    </Card>)} */}\r\n    {tasks?.map((task, i) => <TaskCard key={task.id} task={task} ></TaskCard>)}\r\n\r\n\r\n    {/* 12-12 */} 更快速的转发 ref 方法 使用 div 转发 \r\n    <TasksContainer>\r\n      <Drop\r\n        type={'ROW'}\r\n        direction={'vertical'}\r\n        // droppableId={'task' + kanban.id}\r\n        droppableId={`${kanban.id}`}\r\n      >\r\n        {/* 12-12 */}\r\n        <DropChild\r\n          // 12-13 给个最小高度 解决 全部拖走后无法再次拖入内容\r\n          style={{minHeight: '5px',  }}\r\n        >\r\n          {/* 使用 html 自带的元素 可以接受 ref  */}\r\n          {tasks?.map((task, taskIndex) => <Drag key={task.id} draggableId={'task' + task.id} index={taskIndex} >\r\n            <div className={``}>\r\n              <TaskCard key={task.id} task={task} ></TaskCard>\r\n            </div>\r\n            \r\n          </Drag>)}\r\n        </DropChild>\r\n\r\n      </Drop>\r\n    </TasksContainer>\r\n\r\n\r\n    <CreateTask kanbanId={kanban.id} />\r\n    \r\n  </Container> \r\n})\r\n\r\nexport default KanbanColumn;\r\n\r\n// 12-4\r\nexport const Container = styled.div`\r\n  min-width: 27rem;\r\n  border-radius: 6px;\r\n  background-color: rgb(244, 245, 247);\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.7rem 0.7rem 1rem;\r\n  margin-right: 1.5rem;\r\n`\r\n\r\nconst TasksContainer = styled.div`\r\n  /* overflow: hidden; */\r\n  flex: 1;\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`\r\n","// 12-4\nimport { Project } from 'Todolist/tsx/list';\nimport { useHttp } from 'utlis/http';\nimport { QueryClient, useMutation, useQuery, useQueryClient, QueryKey } from 'react-query';\nimport { Task } from 'types/task';\nimport { TaskType } from 'types/task-type';\n\nexport const useTaskTypes = () => {\n  const client = useHttp()\n  console.log(' useTaskTypes ： ',  )// \n\n  return useQuery<TaskType[]>(\n    [\n      'taskTypes', \n    ], \n    () => client('taskTypes', )\n  )\n}\n\n\n\n\n","\n// 12-5\nimport { Raw } from '../types/index';\nimport { Select } from 'antd';\nimport React from 'react';\nimport { IdSelect } from 'components/id-select';\nimport { useTaskTypes } from 'utlis/task-type';\n\nexport const TaskTypeSelect = (props: React.ComponentProps<typeof IdSelect>) => {\n  // const {data: taskTypes} = useTaskTypes()\n  const taskTypes = [\n    {\n      id: 1,\n      name: 'task',\n    },\n    {\n      id: 2,\n      name: 'bug',\n    },\n  ]\n  \n  console.log(' TaskTypeSelect ： ', props, taskTypes,  )// \n  return <IdSelect options={taskTypes || []} {...props} ></IdSelect> \n}\n\n","// 12-5\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useProjectInUrl, useKanBanSearchParams, useTasksSearchParams } from './utli';\r\nimport { Row } from 'components/lib';\r\nimport { Button, Input } from 'antd';\r\nimport { UserSelect } from 'components/user-select';\r\nimport { useSetUrlSearchParam } from 'utlis/url';\r\nimport { TaskTypeSelect } from 'components/task-type-select';\r\n\r\n\r\nconst SearchPanel = () => {\r\n  console.log(' SearchPanel       ： ',   )\r\n  const searchParams = useTasksSearchParams()\r\n  const setSearchParams = useSetUrlSearchParam()\r\n\r\n  const reset = () => {\r\n    console.log(' reset   ,   ： ',   )\r\n    setSearchParams({\r\n      typeId: undefined, \r\n      processorId: undefined, \r\n      tagId: undefined, \r\n      name: undefined, \r\n    })\r\n  }\r\n  console.log(' SearchPanel searchParams ： ', searchParams,  )// \r\n\r\n  return <Row marginBottom={4} gap  >\r\n    <Input style={{width: '20rem',  }} \r\n      placeholder={'人物名'}\r\n      value={searchParams.name}\r\n      onChange={(evt) => setSearchParams({name: evt.target.value,  })}\r\n    />\r\n\r\n    <UserSelect \r\n      defaultOptionName={'经办人'}\r\n      value={searchParams.processorId}\r\n      onChange={(value) => setSearchParams({processorId: value,  })}\r\n    />\r\n    <TaskTypeSelect \r\n      defaultOptionName={'类型'}\r\n      value={searchParams.typeId}\r\n      onChange={(value) => setSearchParams({typeId: value,  })}\r\n    />\r\n\r\n    <Button onClick={reset}>清空筛选器</Button>\r\n  </Row> \r\n}\r\n\r\nexport default SearchPanel;\r\n","// 12-5\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useProjectInUrl, useKanBanSearchParams, useTasksSearchParams, useProjectIdInUrl, useKanbanQueryKey,  } from './utli';\r\nimport { Row } from 'components/lib';\r\nimport { Button, Input } from 'antd';\r\nimport { UserSelect } from 'components/user-select';\r\nimport { useSetUrlSearchParam } from 'utlis/url';\r\nimport { TaskTypeSelect } from 'components/task-type-select';\r\nimport { useAddKanban } from 'utlis/kanban';\r\nimport { Container } from './kanban-column';\r\n\r\n\r\nconst CreateKanban = () => {\r\n  console.log(' CreateKanban       ： ',   )\r\n\r\n  const [ name, setName ] = useState('')\r\n  const projectId = useProjectIdInUrl()\r\n  const {mutateAsync: addKanban,  } = useAddKanban(useKanbanQueryKey())\r\n  \r\n  const submit = async () => {\r\n    console.log(' CreateKanban submit ： ',  )\r\n    const res = await addKanban({name, projectId})\r\n    console.log(' CreateKanban await的结果： ： ', res,  )\r\n    setName('')    \r\n  }\r\n  return <Container>\r\n    <Input size={'large'} placeholder={'新建看板'} \r\n      onPressEnter={submit}\r\n      value={name}\r\n      onChange={(evt) => setName(evt.target.value)}\r\n    />\r\n  </Container> \r\n}\r\n\r\nexport default CreateKanban;\r\n","// 12-8\r\nimport { useForm } from 'antd/es/form/Form';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useTasksModal, useTasksQueryKey } from './utli';\r\nimport { useEditProject } from 'utlis/project';\r\nimport { useAddTask, useDeleteTask, useEditTask } from 'utlis/task';\r\nimport { Modal, Card, Form, Input, Button,  } from 'antd';\r\nimport { TaskTypeSelect } from 'components/task-type-select';\r\nimport { UserSelect } from 'components/user-select';\r\n\r\n// 报错\r\n// warning: Instance created by、useForm is not connected to any Form element. Forget to pass\r\n// 原因 modal 一上来会渲染 认为我们声明了 form  但是因为没有渲染 Form 所以认为没有 Form  \r\n// 解决 给 Modal 加上 forceRender 属性 \r\n\r\n// Form.Item name 属性 为name属性的会导致 控制台报错   因为 antd 默认把 name 属性作为id处理了 与 create-react-app 版本有关系 \r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8, \r\n  },  \r\n  wrapperCol: {\r\n    span: 16, \r\n  },  \r\n}\r\n\r\nconst TaskModal = () => {\r\n  console.log(' TaskModal       ： ',   )\r\n\r\n  const [form] = useForm()\r\n\r\n  const {\r\n    editingTaskId,\r\n    editingTask,\r\n    close,\r\n  } = useTasksModal()\r\n\r\n  const {\r\n    mutateAsync: editTask, \r\n    isLoading: editLoading,\r\n  } = useEditTask(useTasksQueryKey())\r\n\r\n  const onCancel = () => {\r\n    console.log(' onCancel   ,   ： ',   )\r\n    close()\r\n    form.resetFields()// \r\n  }\r\n\r\n  const onOk = async () => {\r\n    console.log(' onOk ： ',  )\r\n    await editTask({\r\n      ...editingTask,\r\n      ...form.getFieldsValue(),\r\n    })// ()\r\n  }\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue(editingTask)// \r\n  }, [form, editingTask])\r\n\r\n  // 12-9\r\n  const {mutate: deleteTask,  } = useDeleteTask(useTasksQueryKey())\r\n\r\n  const startDelete = () => {\r\n    console.log(' startDelete   ,   ： ',   )\r\n    close()\r\n    Modal.confirm({\r\n      okText: '确定',  \r\n      cancelText: '取消',  \r\n      title: '确定删除看板吗', \r\n      onOk() {\r\n        console.log(' onOk ： ', editingTaskId )\r\n        return deleteTask({id: Number(editingTaskId), })\r\n      },\r\n    })// \r\n  }\r\n\r\n  return <Modal \r\n    okText={'确认'}\r\n    cancelText={'取消'}\r\n    confirmLoading={editLoading}\r\n    title={'编辑任务'}\r\n    visible={!!editingTaskId}\r\n    onOk={onOk}\r\n    onCancel={onCancel}\r\n  >\r\n    <Form \r\n      {...layout} \r\n      initialValues={editingTask}\r\n      form={form}\r\n    >\r\n      <Form.Item label={'任务名'} name={'name'} rules={[{\r\n        required: true,  \r\n        message: '请输入任务名',  \r\n      }]} >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item label={'经办人'} name={'processorId'} >\r\n        <UserSelect defaultOptionName={'经办人'} />\r\n      </Form.Item>\r\n      <Form.Item label={'类型'} name={'typeId'}  >\r\n        <TaskTypeSelect />\r\n      </Form.Item>\r\n      \r\n      {/* <Form.Item style={{textAlign: 'right',  }} >\r\n        <Button loading={mutateLoading} htmlType={'submit'} type={\"primary\"}>提交</Button>\r\n      </Form.Item> */}\r\n\r\n      <div style={{textAlign: 'right',  }} >\r\n        <Button onClick={startDelete} size={'small'} >删除</Button>\r\n      </div>\r\n    </Form>\r\n  </Modal> \r\n}\r\n\r\nexport default TaskModal;\r\n","// 8-4\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { useDocumentTitle } from 'utlis';\r\nimport { useKanbans, useReorderKanban } from 'utlis/kanban';\r\nimport { useProjectInUrl, useKanBanSearchParams, useTasksSearchParams, useTasksQueryKey, useKanbanQueryKey } from './utli';\r\nimport KanbanColumn from './kanban-column';\r\nimport styled from \"@emotion/styled\";\r\nimport SearchPanel from './search-panel';\r\nimport { ScreenContainer } from 'components/lib';\r\nimport { useReorderTask, useTasks } from 'utlis/task';\r\nimport { Spin } from 'antd';\r\nimport CreateKanban from './create-kanban';\r\nimport TaskModal from './task-modal';\r\nimport { DragDropContext, DropResult } from 'react-beautiful-dnd';\r\nimport { Drop, DropChild, Drag } from '../../components/drag-and-drop';\r\n\r\n\r\nconst KanbanScreen = () => {\r\n  console.log(' KanbanScreen       ： ',   )\r\n\r\n  // 12-3\r\n  useDocumentTitle('看板列表')\r\n  const {data: currentPorject} = useProjectInUrl()\r\n\r\n  const {\r\n    // data: kanbans, \r\n    isLoading: kanbanIsLoading,  } = useTasks(useKanBanSearchParams())// 12-7\r\n  const {isLoading: taskIsLoading,  } = useTasks(useTasksSearchParams())\r\n  const isLoading = taskIsLoading || kanbanIsLoading\r\n  console.log('  isLoading ：', isLoading, kanbanIsLoading, taskIsLoading,  )// \r\n\r\n  // const {data: kanbans} = useKanbans(useKanBanSearchParams())\r\n  const kanbans = [\r\n    {\r\n      id: 1,\r\n      name: 'string',\r\n      processorId: 1,\r\n      projectId: 1,\r\n      epicId: 1,\r\n      kanbanId: 1,\r\n      typeId: 1,\r\n      note: 'string',\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'string',\r\n      processorId: 1,\r\n      projectId: 1,\r\n      epicId: 1,\r\n      kanbanId: 1,\r\n      typeId: 1,\r\n      note: 'string',\r\n    },\r\n  ]\r\n  console.log(' kanbans ： ', kanbans,  )// \r\n\r\n  // 12-12\r\n  const onDragEnd = useDragEnd()\r\n\r\n  const screen = <ScreenContainer>\r\n    <h1>KanbanScreen</h1>\r\n    <div>\r\n      name: {currentPorject?.name}\r\n    </div>\r\n\r\n    <SearchPanel></SearchPanel>\r\n    \r\n    {/* {isLoading ? <Spin size={'large'} /> : <ColumnContainer>\r\n      {kanbans?.map((kanban, i) => <KanbanColumn key={kanban.id} kanban={kanban} />)}\r\n    </ColumnContainer>} */}\r\n\r\n    {/* 12-11 */}\r\n    {isLoading ? <ColumnContainer>\r\n      <Drop\r\n        type={'COLUMN'}\r\n        direction={'horizontal'}\r\n        droppableId={'kanban'}\r\n      >\r\n          {/* 12-12 */}\r\n          <DropChild\r\n            style={{display: 'flex',  }}\r\n          >\r\n\r\n            {kanbans?.map((kanban, index) => <Drag key={kanban.id} draggableId={'kanban' + kanban.id} index={index} >\r\n              <KanbanColumn key={kanban.id} kanban={kanban} />\r\n            </Drag>)}\r\n\r\n          </DropChild>\r\n\r\n\r\n      </Drop>\r\n\r\n      <CreateKanban />\r\n    </ColumnContainer> : null}\r\n    \r\n\r\n\r\n    {/* 12-9 */}\r\n    <TaskModal></TaskModal>\r\n    \r\n  </ScreenContainer> \r\n\r\n  // 12-11\r\n  return <DragDropContext \r\n    onDragEnd={(...params) => {\r\n      console.log(' onDragEnd params ： ', params,  )// \r\n      // combine: null\r\n      // destination: {droppableId: \"kanban\", index: 1}\r\n      // draggableId: \"kanban1\"\r\n      // mode: \"FLUID\"\r\n      // reason: \"DROP\"\r\n      // source: {index: 0, droppableId: \"kanban\"}\r\n      // type: \"COLUMN\"\r\n\r\n    }} \r\n    // onDragEnd={onDragEnd}\r\n  >\r\n    {screen}\r\n  </DragDropContext>\r\n  \r\n  return screen\r\n}\r\n\r\nexport default KanbanScreen;\r\n\r\n// 12-12 hook 里的函数 使用 useCallback 包裹 \r\nexport const useDragEnd = () => {\r\n  const {data: kanbans} = useKanbans(useKanBanSearchParams())\r\n  const {mutate: reorderKanban} = useReorderKanban(useKanbanQueryKey())\r\n  const {mutate: reorderTask} = useReorderTask(useTasksQueryKey())\r\n  const {data: allTasks = []} = useTasks(useTasksSearchParams())\r\n  console.log(' useDragEnd ： ', kanbans, allTasks,  )// \r\n\r\n  return useCallback(({source, destination, type}: DropResult) => {\r\n    console.log(' useDragEnd ： ', source, destination, type, kanbans,  )// \r\n    if (!destination) {\r\n      return  \r\n    }\r\n    if (type === 'COLUMN') {\r\n      const fromId = kanbans?.[source.index].id\r\n      const toId = kanbans?.[destination.index].id\r\n      if (!fromId || !toId || fromId === toId) {\r\n        return\r\n      }\r\n      const type = destination.index > source.index ? 'after' : 'before'\r\n      reorderKanban({fromId, referenceId: toId, type, })\r\n    }\r\n    if (type === 'ROW') {\r\n      // 准换下类型\r\n      const fromKanbanId = +source.droppableId\r\n      const toKanbanId = +destination.droppableId\r\n      if (fromKanbanId === toKanbanId) {\r\n        return\r\n      }\r\n      const fromTask = allTasks.filter((task) => task.kanbanId === fromKanbanId)[source.index]\r\n      const toTask = allTasks.filter((task) => task.kanbanId === toKanbanId)[destination.index]\r\n      console.log(' fromTask  allTasks.filter v ： ', fromTask, toTask,  )   \r\n      if (fromTask?.id === toTask?.id) {\r\n        return  \r\n      }\r\n      reorderTask({\r\n        fromId: fromTask?.id, \r\n        referenceId: toTask?.id, \r\n        fromKanbanId,\r\n        toKanbanId,\r\n        type: fromKanbanId === toKanbanId && destination.index > source.index ? 'after' : 'before', \r\n      })\r\n    }\r\n  }, [kanbans, reorderKanban, allTasks, reorderTask, ]) \r\n}\r\n\r\n\r\n\r\n// 12-3\r\n// const ColumnContainer = styled.div`\r\n// 12-11\r\nconst ColumnContainer = styled(DropChild)`\r\n  display: flex;\r\n  overflow: hidden;\r\n  margin-right: 2rem;\r\n  flex: 1;\r\n  /* overflow-x: scroll; */\r\n`\r\n\r\n","// 12-16\r\nimport { useCallback, useMemo } from 'react';\r\nimport { useLocation } from 'react-router';\r\nimport { useProject, useTask,  } from 'utlis/project';\r\nimport { useUrlQueryParam } from 'utlis/url';\r\nimport { useDebounce } from 'utlis';\r\nimport { useProjectIdInUrl } from 'screens/kanban/utli';\r\n\r\nexport const useEpicSearchParams = () => ({projectId: useProjectIdInUrl(), })\r\nexport const useEpicsQueryKey = () => ['epics', useEpicSearchParams()]\r\n\r\n","// 12-16\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useEpicsQueryKey,  } from './utli';\r\nimport { Row, ErrorBox } from 'components/lib';\r\nimport { Button, Input, Drawer, DrawerProps, Form, Spin,  } from 'antd';\r\nimport { UserSelect } from 'components/user-select';\r\nimport { useSetUrlSearchParam } from 'utlis/url';\r\nimport { TaskTypeSelect } from 'components/task-type-select';\r\nimport { useAddKanban } from 'utlis/kanban';\r\nimport styled from \"@emotion/styled\";\r\nimport { useAddEpic } from 'utlis/epic';\r\nimport { useForm } from 'antd/es/form/Form';\r\nimport { useProjectIdInUrl } from 'screens/kanban/utli';\r\n\r\n\r\n// const CreateEpic = (props: Pick<DrawerProps, 'visible' | 'onClose'>) => {\r\nconst CreateEpic = (props: Pick<DrawerProps, 'visible'> & {onClose: () => void}) => {\r\n  console.log(' CreateEpic       ： ',   )\r\n\r\n  const [form] = useForm()\r\n\r\n  const {\r\n    mutate: addEpic,\r\n    isLoading,\r\n    error,\r\n  } = useAddEpic(useEpicsQueryKey())\r\n\r\n  const projectId = useProjectIdInUrl()\r\n  const onFinish = async (values: any) => {\r\n    await addEpic({\r\n      ...values,\r\n      projectId,\r\n    })// \r\n    props.onClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    form.resetFields()// \r\n  }, [form, props.visible])\r\n\r\n  return <Drawer\r\n    visible={props.visible}\r\n    onClose={props.onClose}\r\n    forceRender\r\n    destroyOnClose\r\n    width={'100%'}\r\n  >\r\n    <Container>\r\n      {isLoading ? (\r\n        <Spin size={\"large\"} />\r\n      ) : (\r\n        <>\r\n          <h1>创建任务组</h1>\r\n          <ErrorBox error={error} />\r\n          <Form\r\n            form={form}\r\n            layout={\"vertical\"}\r\n            style={{ width: \"40rem\" }}\r\n            onFinish={onFinish}\r\n          >\r\n            <Form.Item\r\n              label={\"名称\"}\r\n              name={\"name\"}\r\n              rules={[{ required: true, message: \"请输入任务组名\" }]}\r\n            >\r\n              <Input placeholder={\"请输入任务组名称\"} />\r\n            </Form.Item>\r\n\r\n\r\n            <Form.Item style={{ textAlign: \"right\" }}>\r\n              <Button\r\n                loading={isLoading}\r\n                type={\"primary\"}\r\n                htmlType={\"submit\"}\r\n              >\r\n                提交\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </>\r\n      )}\r\n    </Container>\r\n  </Drawer> \r\n}\r\n\r\nexport default CreateEpic;\r\n\r\nconst Container = styled.div`\r\n  height: 80vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\n\r\n","// 12-15\nimport { useAddConfig, useDeleteConfig,  } from './use-optimimatic-options';\nimport { useHttp } from 'utlis/http';\nimport { QueryClient, useMutation, useQuery, useQueryClient, QueryKey } from 'react-query';\nimport { Epic } from 'types/epic';\n\nexport const useEpics = (param?: Partial<Epic>) => {\n  const client = useHttp()\n  console.log(' useEpics ： ', param,  )// \n\n  return useQuery<Epic[]>(\n    [\n      'epic', param\n    ], \n    () => client('epic', {data: param})\n  )\n}\n\nexport const useAddEpic = (queryKey: QueryKey) => {\n  const client = useHttp()\n  console.log(' useAddEpic ： ', queryKey,  )// \n\n  return useMutation(\n    (params: Partial<Epic>) => client(`epic`, {\n      data: params, \n      method: 'POST',  \n    }), \n    useAddConfig(queryKey),\n  )\n}\n\nexport const useDeleteEpic = (queryKey: QueryKey) => {\n  const client = useHttp()\n  console.log(' useDeleteEpic ： ', queryKey,  )// \n\n  return useMutation(\n    ({id}: {id: number}) => client(`epic/${id}`, {\n      method: 'DELETE',  \n    }), \n    useDeleteConfig(queryKey),\n  )\n}\n\n\n\n","// 8-4\r\nimport React, { useState, useEffect } from 'react';\r\nimport { ScreenContainer, Row } from 'components/lib';\r\nimport { useProjectInUrl,  } from 'screens/kanban/utli';\r\nimport { useDeleteEpic, useEpics } from 'utlis/epic';\r\nimport { Button, List, Modal,  } from 'antd';\r\nimport dayjs from 'dayjs';\r\nimport { useTasks } from 'utlis/task';\r\nimport { useEpicSearchParams, useEpicsQueryKey } from './utli';\r\nimport { Link } from 'react-router-dom';\r\nimport CreateEpic from './CreateEpic';\r\nimport { Epic } from 'types/epic';\r\n\r\nconst EpicScreen = () => {\r\n  const {data: currentProject,  } = useProjectInUrl()\r\n  // const {data: epics,  } = useEpics()\r\n  const epics = [\r\n    {\r\n      id: 1,\r\n      name: 'string',\r\n      projectId: 1,\r\n      start: 1,\r\n      end: 1,\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'string2',\r\n      projectId: 2,\r\n      start: 2,\r\n      end: 2,\r\n    },\r\n  ]\r\n\r\n  const tasks = [\r\n    {\r\n      id: 1,\r\n      name: 'string',\r\n      processorId: 1,\r\n      projectId: 1,\r\n      epicId: 1,\r\n      kanbanId: 1,\r\n      typeId: 1,\r\n      note: 'string',\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'string',\r\n      processorId: 1,\r\n      projectId: 1,\r\n      epicId: 1,\r\n      kanbanId: 1,\r\n      typeId: 1,\r\n      note: 'string',\r\n    },\r\n  ]\r\n\r\n  // const {data: tasks,  } = useTasks({projectId: currentProject?.id})\r\n  const {data: deleteEpic,  } = useDeleteEpic(useEpicsQueryKey())\r\n  console.log(' EpicScreen       ： ', currentProject, epics, tasks,  )\r\n  // 12-16\r\n  const [ epicCreateOpen, setEpicCreateOpen ] = useState(false)\r\n    \r\n\r\n  const confirmDeleteEpic = (epic: Epic) => {\r\n    console.log(' confirmDeleteEpic   epic: Epic,   ： ', epic  )\r\n    Modal.confirm({\r\n      title: `确定删除这个项目吗 ${epic.name}`,\r\n      content: '点击确定删除',    \r\n      okText: '确定',  \r\n      onOk() {\r\n        console.log(' onOk ： ',  )\r\n        deleteEpic({id: epic.id, })\r\n      },\r\n    })// \r\n  }\r\n\r\n  return <ScreenContainer>\r\n    <h1>{currentProject?.name} 任务组</h1>\r\n    <List \r\n      // style={{overflow: 'scroll',  }}\r\n      dataSource={epics} itemLayout={'vertical'} renderItem={(epic) => <List.Item >\r\n        <List.Item.Meta \r\n          title={<Row between >\r\n            <span>{epic.name}</span>\r\n            <Button type={'link'} onClick={() => setEpicCreateOpen(true)} >创建任务组</Button>\r\n            <Button type={'link'} onClick={() => confirmDeleteEpic(epic)} >删除1</Button>\r\n          </Row>} \r\n          description={<div>\r\n            <div>开始时间： {dayjs(epic.start).format('YYYY-MM-DD')}</div>\r\n            <div>结束时间： {dayjs(epic.end).format('YYYY-MM-DD')}</div>\r\n          </div>}\r\n        />\r\n        <div className={``}>Link \r\n          {tasks?.filter((task) => task.epicId === epic.id).map((task) => <Link\r\n            to={`/projects/${currentProject?.id}/kanban?editingTaskId=${task.id}`} \r\n            key={task.id}  \r\n          >{task.name}</Link>)}\r\n        </div>\r\n      </List.Item>} >\r\n\r\n      <CreateEpic onClose={() => setEpicCreateOpen(false)} visible={epicCreateOpen} ></CreateEpic>\r\n\r\n    </List>\r\n\r\n  </ScreenContainer> \r\n}\r\n\r\nexport default EpicScreen;\r\n","// 8-4\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Navigate, Route, Routes, useLocation } from 'react-router';\r\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\r\nimport KanbanScreen from 'screens/kanban'// \r\nimport EpicScreen from 'screens/epic'// \r\nimport styled from '@emotion/styled'//\r\nimport { Menu } from 'antd';\r\n\r\n// 12-6\r\nconst useRouteType = () => {\r\n  const units = useLocation().pathname.split('/')\r\n  const res = units[units.length - 1] \r\n  console.log(' useRouteType   ,   ： ', units, useLocation(), res, )\r\n  return res\r\n}\r\n\r\n\r\nconst ProjectScreen = () => {\r\n  console.log(' ProjectScreen       ： ',   )\r\n  const routeType = useRouteType()// 12-6\r\n\r\n  return <Container>\r\n    {/* <h1>项目屏</h1> */}\r\n      {/* 注意 不能加上 / 表示是跳转到 根路由/路径 不然会导致无法访问到路由  */}\r\n    {/* <Link to={'/kanban'} >看板</Link>\r\n    <Link to={'/epic'} >任务组</Link> */}\r\n\r\n    <Aside>\r\n      <Menu mode={'inline'}\r\n        selectedKeys={[routeType]}\r\n      >\r\n        <Menu.Item key={'kanban'}  >\r\n          <Link to={'kanban'} >看板</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key={'epic'}  >\r\n          <Link to={'epic'} >任务组</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Aside>\r\n\r\n    <Main>\r\n      <Routes>\r\n        <Route path={'/kanban'} element={<KanbanScreen />} ></Route>\r\n        <Route path={'/epic'} element={<EpicScreen  />} ></Route>\r\n\r\n        \r\n        {/* 如果都匹配不到的话 导航到这个路由 */}\r\n        <Navigate to={window.location.pathname + '/kanban'} \r\n          replace// 加上 该属性 解决 浏览器后退 导致 页面只是简单的把后一条页面记录加进来 而不是替换 \r\n        ></Navigate>\r\n      </Routes>\r\n    </Main>\r\n\r\n  </Container> \r\n}\r\n\r\n// ['/projects', 'projects/1', window.location.pathname + '/kanban']\r\n// 当 访问第2个路由 因为匹配不到 所以到了3  当回退到2 又匹配不到 造成又匹配到了3 循环 \r\n\r\nexport default ProjectScreen;\r\n\r\n// 12-6\r\nexport const Aside = styled.div`\r\n  background-color: rgb(244, 245, 247);\r\n  display: flex;\r\n`\r\n\r\nexport const Main = styled.div`\r\n  box-shadow: -5px 0 5px -5px rgba(0, 0, 0, 0.1);\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 16rem 1fr;\r\n  /* 12-7 */\r\n  /* overflow: hidden; */\r\n  /* 12-13 */\r\n  width: 100%;\r\n`\r\n\r\n","// 10-2\n\nimport React, { useState, useEffect } from 'react';\nimport { Form, Select, Input, Drawer, Button, Spin } from 'antd';// \nimport { projectListActions, selectProjectModalOpen } from 'Todolist/tsx/project-list.slice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useProjectModal, useProjectsQueryKey } from './utli';\nimport { UserSelect } from 'components/user-select';\nimport { useAddProject1, useEditProject } from 'utlis/project';\nimport { useForm } from 'antd/lib/form/Form';\nimport styled from \"@emotion/styled\";\n\n\nconst ProjectModal = (\n  props: {\n    // projectModalOpen: boolean\n    // onClose: () => void,\n  }\n) => {\n  console.log(' ProjectModal   props    ： ', props  )\n    \n  const dispath = useDispatch()// 10-11 \n  // useSelector 是用来读取真个状态树的数据\n  // const projectModalOpen = useSelector(selectProjectModalOpen)\n\n  // 11-4 \n  const {\n    projectModalOpen,\n    close,\n    editingProject,\n    isLoading,\n  } = useProjectModal()\n\n  // 11-5 value 和 onchange 被 Form.Item 代理了  即 我们不需要手动传递 Form.Item 会自动帮我们根据 name 机上 \n  // 相当于 <Form.Item value={formValue.name} onChange={(e) => onChangeFormValue({name: e.target.value, })} ></Form.Item>\n  const title = editingProject ? '编辑项目' : '创建项目'//  \n  console.log('  title ：', title,  )// \n\n  const useMutateProject = editingProject ? useEditProject : useAddProject1\n  console.log('  useMutateProject ：', useMutateProject,  )// \n  const { \n    // mutateAsync, \n    // isLoading: mutateLoading,  } = useMutateProject()\n    isLoading: mutateLoading,  } = useMutateProject(useProjectsQueryKey())\n  const [form] = useForm()\n  const onFinish = (values: any) => {\n    console.log(' onFinish   ,   ： ', values,  )\n    // mutateAsync({...editingProject, ...values}).then(res => {\n    //   console.log(' onFinish res  ： ', res,  )\n    //   form.resetFields()\n    //   close()\n    // })\n  }\n\n  // 12-1\n  const closeModal = () => {\n    console.log(' closeModal   ,   ： ',  )\n    form.resetFields()\n    close()\n  }\n\n\n  useEffect(() => {\n    form.setFieldsValue(editingProject)\n    return () => {\n    }\n  }, [editingProject, form])\n\n  return <Drawer\n    // visible={props.projectModalOpen}\n    width={'100%'}\n    // onClose={() => dispath(projectListActions.openProjectModal())} // 10-11\n    onClose={closeModal} // 12-1\n    visible={projectModalOpen} \n    forceRender// 11-5 解决 控制台报错 form  实例被创建 没有连接到任何 form 元素 轻质渲染 \n    // 在页面一开始刷新的时候 form  并没有显示出来  \n  > \n\n    <Container>\n      {\n        isLoading ? <Spin size={'large'} /> : <>\n          <h1>{title}</h1>\n          <Form \n            layout={'vertical'}\n            style={{width: '40rem',  }}\n            onFinish={onFinish}\n            form={form}// 11-5\n          >\n            <Form.Item label={'名称'} name={'name'} rules={[{\n              required: true,  \n              message: '请输入项目名称',  \n            }]} >\n              <Input />\n            </Form.Item>\n            <Form.Item label={'部门'} name={'organization'} rules={[{\n              required: true,  \n              message: '请输入组织名称',  \n            }]} >\n              <Input />\n            </Form.Item>\n            <Form.Item label={'负责人'} name={'organization'} rules={[{\n              required: true,  \n              message: '请输入负责人名称',  \n            }]} >\n              <UserSelect defaultOptionName={'负责人'} />\n            </Form.Item>\n\n            \n            <Form.Item style={{textAlign: 'right',  }} >\n              <Button loading={mutateLoading} htmlType={'submit'} type={\"primary\"}>提交</Button>\n            </Form.Item>\n          </Form>\n        </>\n      }\n\n      <h1>弹框</h1>\n      {/* <Button onClick={props.onClose} >关闭</Button> */}\n      <Button onClick={() => dispath(projectListActions.closeProjectModal())} >关闭</Button>\n      \n    </Container>\n  </Drawer>\n}\n\nexport default ProjectModal;\n\n\n// 11-5\nconst Container = styled.div`\n  height: 80vh;\n  display: flex;\n  justify-content: center;\n  fle-flex-direction: column;\n`\n\n","// 10-2\n\nimport React, { useState, useEffect } from 'react';\nimport { List, Select, Input, Drawer, Button, Typography, Popover, Divider } from 'antd';// \nimport { useProjects } from 'utlis/project';\nimport styled from '@emotion/styled'// \nimport { ButtonNoPadding } from 'components/lib';\nimport { useDispatch } from 'react-redux';\nimport { projectListActions } from 'Todolist/tsx/project-list.slice';\nimport { useProjectModal } from 'Todolist/tsx/utli';\n\n\nconst ProjectPopover = (\n  props: { \n    // setProjectModalOpen: (isOpen: boolean) => void, \n    projectButton: JSX.Element,\n  }// 10-3\n) => {\n  console.log(' ProjectPopover   props    ： ',   )\n  const {\n    data: projects,\n    isLoading,\n    refetch,// 12-17\n  } = useProjects()\n\n  const dispath = useDispatch()// 10-11 \n\n  const {\n    open,\n  } = useProjectModal()// 11-1\n\n  \n\n  const pinnedProjects = projects?.filter((project: any) => project.pin)\n  console.log(' pinnedProjects  projects.filter v ： ', pinnedProjects,   )\n\n  const content = <ContentContainer  >\n    <Typography.Text type={'secondary'} >收藏项目</Typography.Text>\n    <List>\n      {pinnedProjects?.map((project: any, i: any) => <List.Item key={i}>\n        <List.Item.Meta title={project.name} />\n      </List.Item>)}\n    </List>\n\n    {/* 103 */}\n    <Divider />\n    {/* <ButtonNoPadding type={'link'} onClick={() => props.setProjectModalOpen(true)} >创建项目</ButtonNoPadding> */}\n\n    <ButtonNoPadding type={'link'} onClick={() => dispath(projectListActions.openProjectModal())} >R创建项目</ButtonNoPadding>\n    <ButtonNoPadding type={'link'} onClick={open} >R创建项目</ButtonNoPadding>\n    {props.projectButton}\n  </ContentContainer>\n  \n    \n  return <Popover\n    placement={'bottom'}\n    content={content}\n    // onVisibleChange={refetch}\n    onVisibleChange={() => refetch()}\n  >\n    项目\n  </Popover>\n}\n\nexport default ProjectPopover;\n\n// 10-2\nconst ContentContainer = styled.div`\n  min-width: 30rem;\n`","// 12-17\n\nimport React, { useState, useEffect } from 'react';\nimport { List, Select, Input, Drawer, Button, Typography, Popover, Divider } from 'antd';// \nimport styled from '@emotion/styled'// \nimport { useUsers } from 'utlis/user';\n\n\nconst UserPopover = () => {\n  console.log(' UserPopover   props    ： ',   )\n  const {\n    data: users,\n    isLoading,\n    refetch,\n  } = useUsers()\n\n  console.log(' users  users.filter v ： ', users,   )\n\n  const content = <ContentContainer>\n    <Typography.Text type={'secondary'} >组员列表</Typography.Text>\n    <List>\n      {users?.map((user: any, i: any) => <List.Item key={user.id}>\n        <List.Item.Meta title={user.name} />\n      </List.Item>)}\n    </List>\n\n    <Divider />\n  </ContentContainer>\n  \n    \n  return <Popover\n    placement={'bottom'}\n    content={content}\n    onVisibleChange={() => refetch()}\n  >\n    组员\n  </Popover>\n}\n\nexport default UserPopover;\n\nconst ContentContainer = styled.div`\n  min-width: 30rem;\n`","\nimport {useState} from 'react';\nimport ProjectListScreen from 'Todolist/tsx/index';\nimport { useAuth } from 'context/auth-context';\nimport styled from '@emotion/styled'// \nimport { Row, ButtonNoPadding,  } from 'components/lib';\n// import SoftwareLogo from 'assets/software-logo.svg'// \nimport { ReactComponent as SoftwareLogo } from 'assets/software-logo.svg'// \nimport { Dropdown, Menu, Button, } from 'antd'// \nimport { Navigate, Route, Routes } from 'react-router';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport ProjectScreen from 'screens/projects'// \nimport { resetRoute } from 'utlis';\nimport { TestInfnite } from 'Todolist/Test';\nimport ProjectModal from 'Todolist/tsx/poject-modal';\nimport ProjectPopover from 'components/project-popover';\nimport UserPopover from 'components/user-popover';\n\n// 8-3 react是一个核心库 负责处理计算的逻辑 数据怎么影响dom树    react-dom 主要在浏览器宿主环境里/react-native在app里运行  它们 消费react的运算结果 \n//  react-router 主要负责管理路由状态  react-router-dom   Routes Route 就像是变量 对象 保存在内存里  计算此刻路由树是怎么样的 计算结果给 react-router-dom 消费 \n\n\n// 11-1 Error: useLocation() may be used only in the context of a <Router> component.  与我们检测 useAuth 是否在规定条件下使用一样\n// 我们  useProjectModal 使用到了 useUrlQueryParam 使用到了 useLocation\n// 解决 把 Router提取到 组件最外部 \n\nexport const AuthenticatedApp = () => {\n  const {logout, user } = useAuth()\n\n  const value: any = undefined // 测试错误边界 报错\n\n  // 10-2 状态提升就是把要共享的状态提升到它们的共同父组件\n  const [ projectModalOpen, setProjectModalOpen ] = useState(false)\n    \n  \n  return <Container>\n    <Router>\n    {/* <TestInfnite></TestInfnite> */}\n    \n    {/* {value.notExist} */}\n    <PageHeader\n      // setProjectModalOpen={setProjectModalOpen}// 10-3\n      projectButton={\n        <ButtonNoPadding type={'link'} onClick={() => setProjectModalOpen(true)} >创建项目</ButtonNoPadding>\n      }// 10-3\n    ></PageHeader>\n    \n    {/* <Main>\n      <ProjectListScreen />\n    </Main> */}\n\n    <Main>\n        <Routes>\n          {/* 注意 点击 该路由下的Link 表示要跳转到改路由下的 路由  */}\n          <Route path={'/projects'} element={<ProjectListScreen\n            // setProjectModalOpen={setProjectModalOpen}\n            projectButton={\n              <ButtonNoPadding type={'link'} onClick={() => setProjectModalOpen(true)} >创建项目</ButtonNoPadding>\n            }// 10-3\n          />} ></Route>\n          <Route path={'/projects/:projectId/*'} element={<ProjectScreen  />} ></Route>\n\n          {/* 8-4 重定向路由 */}\n          <Navigate to={'/projects'} ></Navigate>\n        </Routes>\n    </Main>\n\n    {/* <Nav>Nav</Nav>\n    <Aside>Aside</Aside>\n    <Footer>Footer</Footer> */}\n\n    {/* <Button onClick={() => setProjectModalOpen(true)} >打开</Button> */}\n    <ProjectModal\n      // projectModalOpen={projectModalOpen}\n      // onClose={() => setProjectModalOpen(false)}\n    ></ProjectModal>\n    </Router>\n  </Container> \n}\n\n// 8-3\nconst PageHeader = (\n  props: { \n    // setProjectModalOpen: (isOpen: boolean) => void, \n    projectButton: JSX.Element,\n  }// 10-3\n) => {\n  console.log(' PageHeader       ： ',   )\n  const {logout, user } = useAuth()\n\n  return <Header\n    // between={true}\n  >\n    <HeaderLeft \n      gap={true}\n    >\n      {/* <img src={SoftwareLogo} /> */}\n      {/* 8-4 */}\n      <ButtonNoPadding type={'link'} onClick={resetRoute} >\n        <SoftwareLogo width={'18rem'} color={'rgb(38, 132, 255)'} />\n      </ButtonNoPadding>\n      \n      <ProjectPopover\n        // setProjectModalOpen={props.setProjectModalOpen}\n        {...props}\n      ></ProjectPopover>\n\n      <UserPopover></UserPopover>\n      \n      <h3>项目</h3>\n      <h3>用户</h3>\n    </HeaderLeft>\n\n    <HeaderRight>\n      {/* <button onClick={logout}>登出</button> */}\n      <Dropdown overlay={<Menu>\n        <Menu.Item key={'logout'} >\n          {/* <a onClick={logout}>登出</a> */}\n          <Button type={'link'} onClick={logout}>登出</Button>\n        </Menu.Item>\n      </Menu>} >\n        {/* <a onClick={(e) => e.preventDefault()}>name {user?.name}</a> */}\n        <Button type={'link'} onClick={(e) => e.preventDefault()}>name {user?.name}</Button>\n      </Dropdown>\n    </HeaderRight>\n  </Header> \n}\n\n// 6-5  \n// grid和flex各自的应用场景\n// 1.要考虑，是一维布局还是二维布局\n// -般来说， 一维布局用flex, 二维布局用grid \n// 2.是从内容出发还是从布局出发?\n// 从内容出发:你先有1组内容(数量-般不固定)  然后希望他们均匀的分布在容器中，由内容自己的大小决定占据的空间\n// 从布局出发:先规划网格(数量-般比较固定)，然后再把元素往里填充\n// 从内容出发，用flex\n// 从布局出发，用grid\n\n\n// 1fr 表示 100vh  - 2 * 6rem\n//  grid-template-rows 从上到下的 高度 \nconst Container = styled.div`\n  display: grid;\n  /* grid-template-rows: 6rem calc(100vh - 6rem);  */\n  /* grid-template-rows: 6rem calc(100vh - 6rem) auto;  */\n  grid-template-rows: 6rem 1fr 6rem; \n  grid-template-columns: 20rem 1fr 20rem;\n  grid-template-areas: \"header header header\"\n  \"nav main aside\"\n  \"footer footer footer\";\n  height: 100vh;\n  /* grid-gap: 10rem; */\n`\n\n// const HeaderLeft = styled.div`\n// 6-6\nconst HeaderLeft = styled(Row)`\n  display: flex;\n  align-items: center;\n`\nconst HeaderRight = styled.div`\n`\n\n// 6-6\n// const Header = styled(Row)`\n// `\n\n// grid-area 用来给 grid 子元素起名字 \nconst Header = styled.header`\n  grid-area: header;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  /* 6-7 */\n  padding: 3.2rem;\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);\n  z-index: 1;\n`\n// const Main = styled.main`\n//   grid-area: main;\n// `\n// 12-6\nconst Main = styled.main`\n  display: flex;\n  /* overflow: hidden; */\n`\nconst Nav = styled.nav`\n  grid-area: nav;\n`\nconst Aside = styled.aside`\n  grid-area: aside;\n`\nconst Footer = styled.footer`\n  grid-area: footer;\n`\n\n","import React, { useState, useEffect, FormEvent,  } from 'react';\nimport { useArray } from 'utlis';\nimport { useAuth } from 'context/auth-context';\nimport { Form, Button, Input,  } from 'antd'// \nimport { LongButton } from 'unauthenticated-app';\nimport { useAsync } from 'utlis/use-async';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login as loginThunk } from 'store/auth.slice';\n\n\n\n// 接口 也可以使用泛型和继承 \ninterface Base {\n  id: number\n}\n\ninterface Advance extends Base {\n  name: string\n}\n\nconst vars: Advance = {\n  name: 'zyb', \n  id: 100, \n}\n\n\n// 传入的参数只要具备参数类型必须的字段即可 但是 ts 跟 java的类型兼容还是有区别\n// ts 的是 鸭子类型 即 面向接口编程 而不是 面向对象编程 \n// 即 如果把传入参数的接口类型去掉 但是因为参数对象依然具有接口的相应属性 \nconst test = (p: Base) => {\n  console.log(' test   p: Base,   ： ', p  )\n}\n\ntest(vars)\n\nconst apiUrl = process.env.REACT_APP_API_URL\n\n// const Login = () => {\nconst Login = ({onError}: {onError: (error: Error) => void}) => {// 7-3\n  // const login = (\n  //   param: {\n  //   username: string, \n  //   password: string, \n  // }) => {\n  //   console.log(' login   ,   ： ', param,  )\n  // }\n\n  // 5-5 promise 里的代码是同步代码  then里的是异步\n  // js 里有 2种任务 一种是宏任务 setTimeout 一种是微任务 promise 回调 微任务先执行然后是宏任务 \n  // \n  const authData = useAuth()\n  const {login, user,  } = authData\n  console.log(' LoginLogin user ： ', user, authData )// \n\n  const {run, isLoading, error, } = useAsync(undefined, {throwOnError: true,  })\n\n  const [ count, setCount ] = useState(0)\n  console.log(' isLoading ： ', isLoading,  )// \n  \n  const dispatch = useDispatch()// 10-12 \n  \n\n  // fetch(`${apiUrl}/login`, {\n  // fetch(`${apiUrl}/register`, {\n  //   method: 'POST',  \n  //   headers: {\n  //     'Content-Type': 'application/json',  \n  //   },  \n  //   // body: JSON.stringify(param), \n  //   body: JSON.stringify({\n  //     username: '15160208606', \n  //     password: '1',\n  //   }), \n  // }).then(async res => {\n  //   console.log(' projectproject res  ： ', res,  )\n  //   if (res.ok) {\n  //     await res.json()\n  //   }\n  // })\n\n  // 如果会动啊函数类型不确定时 可以鼠标看下它的回调函数签名\n  // 如果不指定泛型类型 默认会有 FormEvent<Element>\n  // const handleSubmit = (event: FormEvent) => {\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    console.log(' handleSubmit   event:  ,   ： ', event,   )\n    event.preventDefault()\n    const username = (event.currentTarget.elements[0] as HTMLInputElement).value\n    const password = (event.currentTarget.elements[1] as HTMLInputElement).value\n    console.log(' username, password ： ', username, password,  )// \n    login({\n      username, password, \n    })\n  }\n  \n  const onFinish = async (values: {\n    username: string,  \n    password: string,  \n  }) => {\n    console.log(' onFinish   event:  ,   ： ', values,   )\n\n    setCount(count + 1)// 注意 因为setState是异步的 所以会导致调用后立马输出值 得到的是当前还未改变的值 \n    console.log(' count ： ', count,  )// \n\n    // login(valuesFinish   event:  ,   ： ', values,   )\n    // login(values).catch((e) => {\n    //   console.log(' catchcatchcatch ： ', e,  )// \n    //   onError(e)\n    // })// 7-3\n\n    // 注意 如果使用 .catch 的方式捕获错误没关系 会等到异步结束才捕获\n    // 如果要使用 try catch  捕获async异步错误 需要在 try 里调用 await 才能捕获到错误 \n    // 否则会导致调用完 login 方法后 就马上 catch  这时异步还没结束 \n    try {\n      // login(values)\n      console.log(' errorerror 11 ： ', error,  )// \n      // await login(values)\n      await run(login(values))\n\n      dispatch(loginThunk(values))// 10-12 \n      \n      console.log(' errorerror ： ', error,  )// \n    } catch (e) {\n      onError(e)\n    }\n  }\n\n\n  return <Form onFinish={onFinish}>\n    <Form.Item name=\"username\">\n      <Input type=\"text\" id={'username'}  />\n    </Form.Item>\n    <Form.Item name=\"password\">\n      <Input type=\"text\" id={'password'}  />\n    </Form.Item>\n    <Form.Item >\n      <LongButton loading={isLoading} htmlType={'submit'} type={\"primary\"}>登陆</LongButton>\n    </Form.Item>\n  </Form> \n  \n  return <form onSubmit={handleSubmit}>\n    {user ? <div className={``}>\n      登录成功 用户名： {user?.name} \n      {user?.token}\n    </div>\n     : null}\n\n    <div>\n      <label htmlFor=\"username\">username</label>\n      <input type=\"text\" id={'username'}  />\n    </div>\n    <div>\n      <label htmlFor=\"password\">password</label>\n      <input type=\"text\" id={'password'}  />\n    </div>\n    <button type=\"submit\">登陆</button>\n  </form> \n}\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/logo.6c866125.svg\";","export default __webpack_public_path__ + \"static/media/left.e74de3ec.svg\";","export default __webpack_public_path__ + \"static/media/right.b423a6cf.svg\";","// 5-6\nimport React, { useState, useEffect, FormEvent,  } from 'react';\nimport Register from 'unauthenticated-app/Register';\nimport Login from 'unauthenticated-app/Login';\nimport { Card, Button, Typography, } from 'antd';// \nimport styled from '@emotion/styled'// \nimport logo from 'assets/logo.svg'// \nimport left from 'assets/left.svg'// \nimport right from 'assets/right.svg'// \nimport { Helmet, } from 'react-helmet';// \nimport { useDocumentTitle } from 'utlis';\nimport { ErrorBox } from 'components/lib';\n\n// 希望以svg的形式 显示到html里 而不是img 因为svg可以自定义它的样式\n\n\nexport const UnauthenticatedApp = () => {\n  const [ isRegister, setIsRegister ] = useState(false)\n  const [ error, setError ] = useState<Error | null>(null)// 7-3\n  console.log(' UnauthenticatedApp error ： ', error,  )// \n\n  useDocumentTitle('请登录或注册以继续')\n    \n  return <Container>\n\n    {/* <Helmet>\n      <title>请登录或注册以继续</title>\n    </Helmet> */}\n\n    <Header></Header>\n    {/* <Background></Background> */}\n    <ShadowCard>\n      <Title>\n        {isRegister ? '请注册' : '请登录'}\n      </Title>\n\n      {/* 7-3 */}\n      {/* {error ? <Typography.Text type={'danger'} >{error.message}</Typography.Text> : null} */}\n      {/* 11-3 */}\n      <ErrorBox error={error}></ErrorBox>\n\n      {isRegister ? <Register onError={setError} ></Register> : <Login onError={setError} ></Login>}\n      {/* <button onClick={() => setIsRegister(!isRegister,  )}>\n        切换到 {isRegister ? '登录' : '注册'}\n      </button> */}\n\n      <a onClick={() => setIsRegister(!isRegister,  )}>\n        {isRegister ? '已经有账号了，直接登录' : '没有账户？注册新账号'}\n      </a>\n    </ShadowCard>\n  </Container>\n}\n\n// 6-4\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 100vh;\n`\nconst ShadowCard = styled(Card)`\n  width: 40rem;\n  min-height: 56rem;\n  padding: 3.2rem 4rem;\n  border-radius: 0.3rem;\n  box-sizing: border-box;\n  box-shadow: rgba(0, 0, 0, 0.1) 0 0 10px;\n`\nconst Header = styled.header`\n  background: url(${logo}) no-repeat center;\n  padding: 5rem 0;\n  background-size: 8rem;\n  width: 100%;\n`\nconst Background = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: left bottom, right bottom;\n  background-size: calc(((100vw -40rem) / 2) - 3.2rem), calc(((100vw -40rem) / 2) - 3.2rem), cover;\n  background-image: url(${left}), url(${right});\n\n`\nconst Title = styled.h2`\n  margin-bottom: 2.4rem;\n  color: rgb(94, 108, 132);\n`\nexport const LongButton = styled(Button)`\n  width: 100%;\n`\n\n\n\n","// 7-5 在类组件里定义 static componentDidCatch 就变成了错误边界 \n\n\nimport React, { Component, PureComponent, ReactNode } from 'react'\n\ntype FallbackRender = (props: {error: Error | null}) => React.ReactElement\n\n// class ErrorBoundary extends Component<{children: ReactNode, fallbackRender: FallbackRender}> {\n// react 定义的一个 typing 可以处理经常需要编写的 children: ReactNode  传入 除了 children 的剩下的属性 \nclass ErrorBoundary extends Component<React.PropsWithChildren<{fallbackRender: FallbackRender}>, {error: Error | null}> {\n  state = {\n    error: null,  \n  }\n\n  static getDerivedStateFromError(error: Error) {\n    // 返回的值会被设置到 state \n    return {\n      error,\n    } \n  }\n\n  render() {\n    console.log(' %c ErrorBoundary 组件 this.state, this.props ： ', `color: #333; font-weight: bold`, this.state, this.props,  )\n    const {error,  } = this.state// \n    const {fallbackRender, children,  } = this.props// \n\n    if (error) {\n      return fallbackRender({error})\n    }\n    \n    return children\n  }\n}\n\nexport default ErrorBoundary// \n\n","// 2-2\nexport const calc = () => {\n  console.log(' calc ： ',    )// \n}\n\n","// 8-6 首句引入\nimport './wdr'\n\nimport React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {calc} from 'entry';\n// import ProjectListScreen from 'Todolist/jsx'// \nimport ProjectListScreen from 'Todolist/tsx'// \nimport UseArrayDemo from 'Todolist/tsx/UseArrayDemo'// \nimport Login from 'Todolist/Login'// \nimport { AuthenticatedApp } from 'authenticated-app';\nimport {UnauthenticatedApp} from 'unauthenticated-app';\nimport { useAuth } from 'context/auth-context';\nimport ErrorBoundary from 'components/error-boundary';\nimport { FullPageErrorFallBack } from 'components/lib';\n\n\ncalc()\n\nfunction App() {\n  \n  const authData = useAuth()\n  // console.log(' authData ： ', authData,  )// \n  const {user,  } = authData\n  \n\n  return (\n    <div className=\"App\">\n      {/* App */}\n      {/* <ProjectListScreen></ProjectListScreen>   */}\n      {/* <UseArrayDemo></UseArrayDemo> */}\n      {/* <Login></Login> */}\n\n      <ErrorBoundary fallbackRender={FullPageErrorFallBack} >\n        {user ? <AuthenticatedApp></AuthenticatedApp> : <UnauthenticatedApp></UnauthenticatedApp>}\n      </ErrorBoundary>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore,  } from '@reduxjs/toolkit'// \nimport { projectListSlice } from 'Todolist/tsx/project-list.slice';\nimport { authSlice,  } from 'store/auth.slice'// \n\n\nexport const rootReducer = {\n  projectList: projectListSlice.reducer,// 10-11\n  // 10-12\n  auth: authSlice.reducer, \n}\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  // reducer: projectListSlice.reducer,// 10-11\n})\n\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>// 10-11  \n// 查看源码 发现 getState 是个函数 返回一个 s 即 整个state 树 的 泛型  \n// typeof store.getState 是一个js函数   typeof 转化为 ts 类型 \n// ReturnType ts 自带的帮助函数 传入一个函数 自动帮我们返回一个 函数的类型\n// 所以读取函数 返回的就是整个 state 的类型  \n\n// 当状态复杂的时候 状态提升也捉襟见肘  此时可以考虑把状态放到单独的 容器里 即 redux ","// 5-5\n\nimport React, { ReactNode, useState } from 'react';\nimport { AuthPorvider } from 'context/auth-context';\n// import { QuesryClient, QuesryClientProvider, } from 'jira-dev-tool'// \nimport { Provider,  } from 'react-redux'// // 10-11\nimport { store } from 'store';\n// 注意 如果 没有 包裹 传递 provider  state  会导致 页面报错 \n// Error: could not find react-redux context val\nimport { QueryClient, QueryClientProvider } from \"react-query\";// 11-5\n\n\nexport const AuthPorviders = ({\n  children,\n}: {children: ReactNode}) => {\n  // 11-5\n  const queryClient = new QueryClient({\n    defaultOptions: {\n      queries: {\n        refetchOnWindowFocus: false,  \n      },  \n    },  \n  })// \n  // console.log(' queryClient ： ', queryClient,  )// \n\n  return (\n    <QueryClientProvider client={queryClient} >\n      <Provider store={store}  >\n        \n        <AuthPorvider >\n          {children}\n        </AuthPorvider>\n      </Provider>\n        \n    </QueryClientProvider>\n  )\n  // return (\n  //   <QuesryClientProvider client={new QuesryClient()} >\n  //     <AuthPorvider >\n  //       {children}\n  //     </AuthPorvider>\n  //   </QuesryClientProvider>\n  // )\n}\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import { loadDevTools,  } from 'jira-dev-tool'// \n// import { DevTools, loadServer, } from 'jira-dev-tool'// \nimport { AuthPorviders,  } from 'context'// 5-5\nimport 'antd/dist/antd.less'\n\n// 6-1 emotion 是css in js 里最受欢迎的js库之一    npm i craco craco-less -D\n// 引入 antd 的 less 之后就可以 自定义antd属性变量  并且需要放到 jira-dev-tool 后面 因为都使用到 antd\n// 根目录创建一个 craco.config.js 编写后 重启项目 \n\nconst setup = () => ReactDOM.render(\n  <React.StrictMode>\n    <AuthPorviders>\n      {/* <DevTools></DevTools> */}\n      <App />\n    </AuthPorviders>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\nsetup()\n// loadDevTools(setup);\n// loadServer(setup);// 并且 给 context的 AppProviders 包裹\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     {/* <App /> */}\n//     <AuthPorviders>\n//       <App />\n//     </AuthPorviders>\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// )\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}